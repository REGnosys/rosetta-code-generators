namespace drr.regulation.common
version "0.76.0"

import cdm.base.staticdata.party.*

import cdm.event.common.*
import cdm.event.workflow.*

type ExecutingEntity:
	isInvestmentFirm boolean (1..1)
	addressOfBranch Address (1..1)
	addressOfIncorporation Address (1..1)

type ReportableEvent: <"Specifies a workflowstep with enriched information required for reporting.">
	[rootType]
    originatingWorkflowStep WorkflowStep (1..1) <"The workflowstep that originated the reportable event.">
    reportableTrade TradeState (0..1) <"The reportable trade decomposed from the originating workflow step when required.">
    reportableInformation ReportableInformation (1..1) <"Additional information required for a reportable transaction, including the reporting regime.">

type ReportableInformation: <"Specifies the relevant regulators or other supervisory bodies the transaction is relevant for, and regime specific information required relating to the transaction and the parties.">

    confirmationMethod ConfirmationMethodEnum (0..1) <"Specifies the method for confirmation of the transacion.">
	executionVenueType ExecutionVenueTypeEnum (1..1) <"Specifies the type of venue where a trade could be executed.">
    intragroup boolean (0..1) <"Specifies whether the contract was entered into as an intragroup transaction, defined in Article 3 of Regulation (EU) No 648/2012.">
	largeSizeTrade boolean (0..1) <"Specifies whether the sender of this trade considers it to be a large notional trade or block trade for reporting purposes, and thus eligible for delayed public reporting. Normally this will only be applicable for off-facility trades.">
	partyInformation PartyInformation (1..*) <"Specifies party specific information required for reporting of the transaction">
    //ToDo: This attribute should be jurisdiction specific. As of Aug. 2022 there is jurisfiction specific fields in FpML neither
    sefOrDcmAnonymousIndicator boolean (0..1) <"Indicator of whether the swap was executed anonymously on a SEF or DCM. When set to true, counterparty details will be masked on reporting.">

type ReportingRegime: <"Specifies the regulatory regime requiring reporting of the transaction.">
	regimeName RegimeNameEnum (1..1) <"Identifies the reporting regime under which this data is reported. For example, Dodd-Frank, MiFID, HongKongOTCDRepository, ODRF">
	supervisoryBody SupervisoryBodyEnum (0..1) <"Identifies the specific regulator or other supervisory body for which this data is produced. For example, CFTC, SEC, UKFSA, ODRF, SFC, ESMA.">
    mandatorilyClearable boolean (1..1) <"Indicator of whether the transaction is mandatorily clearable.">
    clearingException ClearingException (0..1) <"Identifies the type of clearing exception or exemption that the counterparty has elected.">
	postPricedIndicator boolean (0..1) <"Indication of whether the transaction satisfies the definition of 'post-priced swap'.">
    cftcPartyInformation CFTCPartyInformation (0..1) <"Party information required for reporting a transaction to the CFTC.">
	esmaPartyInformation ESMAPartyInformation (0..1) <"Party information required for reporting a transaction under ESMA.">
	secPartyInformation SECPartyInformation (0..1) <"Party information required for reporting a transaction under SEC.">
    reportingRole ReportingRoleEnum (0..1) <"Specifies the reporting role of the party with respect to the regime.">


    condition SupervisorInformation: <"For certain regimes a supervisor registration must be provided.">
		if regimeName = RegimeNameEnum -> DoddFrankAct then
			supervisoryBody = SupervisoryBodyEnum -> CFTC or supervisoryBody = SupervisoryBodyEnum -> SEC

    condition RegimeInformation:
        if supervisoryBody = SupervisoryBodyEnum -> CFTC
             then cftcPartyInformation exists
	 	else if supervisoryBody = SupervisoryBodyEnum -> SEC
             then secPartyInformation exists
         else if supervisoryBody = SupervisoryBodyEnum -> ESMA
             then esmaPartyInformation exists

type PartyInformation: <"Specifies party specific information required for reporting of the transaction">
    partyReference Party (1..1) <"Specifies the party that is associated with the enriched information.">
		[metadata reference]
    relatedPerson NaturalPersonRole (0..*) <"The role(s) that natural person(s) may have in relation to the transaction.">
	relatedParty RelatedParty (0..*) <"Specifies one or more parties that perform a role within the transaction. The related party performs the role with respect to the party identified by the 'partyReference'.">
    regimeInformation ReportingRegime (1..*) <"Specifies the regulatory regime requiring reporting of the transaction. A list of regime information is provided when an event is reportable to more than one regime.">


type CFTCPartyInformation: <"Enriched party information required for reporting a transaction to the CFTC.">
    organizationType CFTCEntityClassificationEnum (0..1) <"Specifies the nature of the type as registered with the CFTC.">
    federalIndicator boolean (1..1) <"Indicator of whether counterparty is a federal entity.">
    financialIndicator boolean (1..1) <"Indicator of whether counterparty is a financial entity.">

type ClearingException: <"Specifies information related to clearing exceptions or exemptions that are applied to the trade.">
	clearingException boolean (0..1) <"Indication of whether an exception from normal clearing mandates is being applied caused by the type of the parties or their relationship, such as inter-affiliate trades.">
    clearingExceptionReason ClearingExceptionReasonEnum (0..1) <"Identifies the type of clearing exception or exemption that the counterparty has elected.">
	clearingExceptionDeclaration ClearingExceptionDeclaration (0..1) <"Specifies supporting evidence when claiming an end user exception.">

        condition ClearingException: <"When Clearing Exception is 'True' a Clearing Exception Reason should be provided.">
        if clearingException = True then clearingExceptionReason exists and
        if clearingExceptionReason exists then clearingException = True

type ClearingExceptionDeclaration: <"Specifies supporting evidence when claiming an end user exception.">
	creditDocument CreditDocumentEnum (0..*) <"Specifies arrangements being made to provide credit.">
	organizationCharacteristic OrganizationCharacteristicEnum (0..*) <"Specifies the categories or characteristics that apply to an organization which allow it to apply for an end-user exception determination.">
	transactionCharacteristic TransactionCharacteristicEnum (0..*) <"Specifies the categories or characteristics that apply to a transaction which allow application of an end-user exception determination.">

type ESMAPartyInformation: <"Enriched party information required for reporting a transaction under ESMA EMIR.">
    natureOfParty NatureOfPartyEnum (1..1) <"Specifies the nature of the counterparty.">
        // [metadata scheme] causing ingestion to fail
    corporateSector CorporateSector (0..1) <"Specifies the corporate sector of the counterparty.">

    condition CorporateSector: <"Condition to ensure that the corporate sector of the counterparty is specified when required.">
        if natureOfParty = NatureOfPartyEnum -> Financial or natureOfParty = NatureOfPartyEnum -> NonFinancial
        then corporateSector exists
        else corporateSector is absent

type CorporateSector: <"Specifies the corporate sector of the counterparty.">
    financialSector FinancialSectorEnum (0..1) <"Specifies the ESMA EMIR Financial Sector of a counterparty.">
    nonFinancialSector NonFinancialSector (0..*) <"Specifies the ESMA EMIR Non Financial Sector of a counterparty.">

type NonFinancialSector: <"Specifies the ESMA Non Financial Sector of a counterparty and the ordinality of the relative importance of the corresponding activity.">
    ordinal int (1..1)
    nonFinancialSectorIndicator NonFinancialSectorEnum (1..1)

type SECPartyInformation: <"Enriched party information required for reporting a transaction to the CFTC.">
	entityClassification SECEntityClassificationEnum (1..1) <"Specifies the entity classification of a party under the U.S. Securities and Exchange Commission (SEC).">

