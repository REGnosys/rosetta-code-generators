namespace drr.regulation.cftc.rewrite
version "0.76.0"

import cdm.base.staticdata.asset.common.*
import cdm.base.staticdata.party.*
import cdm.base.math.*
import cdm.base.staticdata.asset.common.*
import cdm.base.staticdata.identifier.*

import cdm.observable.asset.*

import cdm.product.template.*
import cdm.product.common.settlement.*
import cdm.product.asset.*
import cdm.product.qualification.*

import cdm.event.common.*
import cdm.event.position.*
import cdm.event.workflow.*
import cdm.event.qualification.*

import drr.regulation.common.*

import drr.standards.iosco.cde.*

body Authority CFTC <"Commodity Futures Trading Commission (CFTC): The Federal regulatory agency established by the Commodity Futures Trading Act of 1974 to administer the Commodity Exchange Act.">

corpus Regulation "CFTC 17 CFR Parts 45" Part45 <"Part 45 of the CFTCs regulations specifies the Commissions swap data recordkeeping and reporting requirements, pursuant to section 2(a)(13)(G) of the Commodity Exchange Act (CEA), which states that all swaps, whether cleared or uncleared, must be reported to a Swap Data Repository (SDR)">

corpus Regulation "CFTC 17 CFR Parts 43" Part43 <"Part 43 of the CFTCs regulations specifies...">

report CFTC Part43 in T+1
    when ReportableEvent
  	using standard ISO_20022
  	with type CFTCPart43TransactionReport

report CFTC Part45 in T+1
    when ReportableEvent
  	using standard ISO_20022
  	with type CFTCPart45TransactionReport

reporting rule Cleared <"Cleared">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "1" field "Cleared"
		provision "Indicator of whether the transaction has been cleared, or is intended to be cleared, by a central counterparty."]
	[regulatoryReference CFTC Part45 appendix "1" dataElement "1" field "Cleared" footnote "10"
        	provision "Throughout this Technical Specification, references to 'central counterparty' in CDE data elements should be read to mean 'derivatives clearing organizations' and 'exempt derivatives clearing organizations'."]
        [regulatoryReference CFTC Part45 appendix "1" dataElement "1" field "Cleared" footnote "11"
        	provision "Throughout this Technical Specification, references to 'beta and gamma transactions' in CDE data elements should be read to mean 'clearing swaps'."]
        [regulatoryReference CFTC Part45 appendix "1" dataElement "1" field "Cleared" footnote "12"
        	provision "Throughout this Technical Specification, references to 'alpha transactions' in CDE data elements should be read to mean 'original swaps'."]
    CDECleared as "01 Cleared"

reporting rule CentralCounterparty <"Central Counterparty">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "2" field "Central Counterparty"
		provision "Identifier of the central counterparty (CCP) that cleared the transaction. This data element is not applicable if the value of the data element 'Cleared' is 'N' (No, not centrally cleared) or 'I' (Intent to clear)."]
    CDECentralCounterparty as "02 Central counterparty"

reporting rule ClearingAccountOrigin <"Clearing Account Origin">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "3" field "Clearing Account Origin"
		provision "Indicator of whether the clearing member acted as principal for a house trade or an agent for a customer trade."]
    extract if IsCleared(ReportableEvent -> originatingWorkflowStep) = True then
        if Counterparties( TradeForEvent( ReportableEvent ) )
                any = ExtractPartyFromRelatedPartyByRole( ReportableEvent -> reportableInformation -> partyInformation -> relatedParty, PartyRoleEnum -> ClearingFirm ) then
                "HOUS"
            else
                "CLIE"
    /*filter when IsCleared(ReportableEvent -> originatingWorkflowStep) = True then
        extract
            if Counterparties( TradeForEvent( ReportableEvent ) )
                any = ExtractPartyFromRelatedPartyByRole( ReportableEvent -> reportableInformation -> partyInformation -> relatedParty, PartyRoleEnum -> ClearingFirm ) then
                "HOUS"
            else
                "CLIE"*/
    as "03 Clearing account origin"

reporting rule ClearingMember <"Clearing Member">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "4" field "Clearing Member"
		provision "Indicator of whether the transaction has been cleared, or is intended to be cleared, by a central counterparty. Identifier of the clearing member through which a derivative transaction was cleared at a central counterparty. This data element is applicable to cleared transactions under both the agency clearing model and the principal clearing model.
           	 - In the case of the principal clearing model, the clearing member is identified as clearing member and also as a counterparty in both transactions resulting from clearing:
                (i) in the transaction between the central counterparty and the clearing member; and
                (ii) in the transaction between the clearing member and the counterparty to the original alpha transaction.
           	 - In the case of the agency clearing model, the clearing member is identified as clearing member but not as the counterparty to transactions resulting from clearing. Under this model, the counterparties are the central counterparty and the client.
        	This data element is not applicable if the value of the data element 'Cleared' is 'N' (No, not centrally cleared) or 'I' (Intent to clear)"]
	[regulatoryReference CFTC Part45 appendix "1" dataElement "4" field "Clearing Member" footnote "13"
        	provision "Reporting counterparties should report 'clearing swaps' according to the agency clearing model."]
	//TH Review -> Initial proposal needs revision and sample contribution
    filter when IsCleared(ReportableEvent -> originatingWorkflowStep) = True then
        CDEClearingMember as "04 Clearing member"

reporting rule ClearingSwapUSIs <"Clearing Swap USIs">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "5" field "Clearing Swap USIs"
    	provision "The unique swap identifiers (USI) of each clearing swap that replaces the original swap that was submitted for clearing to the derivatives clearing organization, other than the USI for the swap currently being reported (as 'USI' data element below)."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "5" field "Clearing Swap USIs" footnote "14"
        provision "Throughout this Technical Specification, references to 'CFTC USI Data Standard' should refer to the Unique Swap Identifier (USI) Data Standard,
            https://www.cftc.gov/sites/default/files/idc/groups/public/@swaps/documents/dfsubmission/usidatastandards100112.pdf"]
    extract if (IsCleared(ReportableEvent -> originatingWorkflowStep) = True or (IntendedToClear(ReportableEvent) = True and IsActionTypeTerm(ReportableEvent) = True)) then
    //filter when (IsCleared(ReportableEvent -> originatingWorkflowStep) = True or (IntendedToClear(ReportableEvent) = True and IsActionTypeTerm(ReportableEvent) = True)) then
        //extract
        ReportableEvent -> originatingWorkflowStep -> businessEvent then
            extract repeatable BusinessEvent -> after -> trade -> tradeIdentifier -> assignedIdentifier
            filter[ item -> identifier all <> BusinessEvent -> instruction -> before -> trade -> tradeIdentifier -> assignedIdentifier -> identifier ]
	        filter[ item -> identifierType = TradeIdentifierTypeEnum -> UniqueSwapIdentifier ] then
            (
                ClearingSwapUSI
            )

reporting rule ClearingSwapUSI <"Clearing Swap USI">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "5" field "Clearing Swap USIs"
    	provision "The unique swap identifiers (USI) of each clearing swap that replaces the original swap that was submitted for clearing to the derivatives clearing organization, other than the USI for the swap currently being reported (as 'USI' data element below)."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "5" field "Clearing Swap USIs" footnote "14"
        provision "Throughout this Technical Specification, references to 'CFTC USI Data Standard' should refer to the Unique Swap Identifier (USI) Data Standard,
            https://www.cftc.gov/sites/default/files/idc/groups/public/@swaps/documents/dfsubmission/usidatastandards100112.pdf"]
    extract AssignedIdentifier -> identifier as "05-$ Clearing swap USIs"

reporting rule ClearingSwapUTIs <"Clearing Swap UTIs">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "6" field "Clearing Swap UTIs"
    	provision "The unique transaction identifiers (UTI) of each clearing swap that replaces the original swap that was submitted for clearing to the derivatives clearing organization, other than the UTI for the swap currently being reported (as 'UTI' data element below)."]
    extract if (IsCleared(ReportableEvent -> originatingWorkflowStep) = True or (IntendedToClear(ReportableEvent) = True and IsActionTypeTerm(ReportableEvent) = True)) then
    //filter when (IsCleared(ReportableEvent -> originatingWorkflowStep) = True or (IntendedToClear(ReportableEvent) = True and IsActionTypeTerm(ReportableEvent) = True)) then
        //extract 
        ReportableEvent -> originatingWorkflowStep -> businessEvent then
            extract repeatable BusinessEvent -> after -> trade -> tradeIdentifier -> assignedIdentifier
            filter[ item -> identifier all <> BusinessEvent -> instruction -> before -> trade -> tradeIdentifier -> assignedIdentifier -> identifier ]
            filter[ item -> identifierType = TradeIdentifierTypeEnum -> UniqueTransactionIdentifier ] then
            //extract repeatable GetClearingIdentifiers(BusinessEvent, TradeIdentifierTypeEnum -> UniqueTransactionIdentifier) then
            (
                ClearingSwapUTI
            )

reporting rule ClearingSwapUTI <"Clearing Swap UTI">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "6" field "Clearing Swap UTIs"
    	provision "The unique transaction identifiers (UTI) of each clearing swap that replaces the original swap that was submitted for clearing to the derivatives clearing organization, other than the UTI for the swap currently being reported (as 'UTI' data element below)."]
    extract AssignedIdentifier -> identifier as "06-$ Clearing swap UTIs"

reporting rule OriginalSwapUSI <"Original Swap USI">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "7" field "Original Swap USI"
    	provision "The unique swap identifier (USI) of the original swap submitted for clearing to the derivatives clearing organization that is replaced by clearing swaps."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "7" field "Original Swap USI" footnote "15"
        provision "For transactions where no original swap USI is available or not provided, a value of 'NOTAVAILALBLE' can be used."]
    extract if IsCleared(ReportableEvent -> originatingWorkflowStep) = True and IsActionTypeNEWT(ReportableEvent) = True then
    //filter when IsCleared(ReportableEvent -> originatingWorkflowStep) = True and IsActionTypeNEWT(ReportableEvent) = True then
        //extract 
        BeforeTradeForEvent(ReportableEvent) then
            extract Trade -> tradeIdentifier -> assignedIdentifier
                filter [item -> identifierType = TradeIdentifierTypeEnum -> UniqueSwapIdentifier] only-element then 
                    extract AssignedIdentifier -> identifier
    as "07 Original swap USI"

reporting rule OriginalSwapUTI <"Original Swap UTI">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "8" field "Original Swap UTI"
    	provision "The unique transaction identifier (UTI) of the original swap submitted for clearing to the derivatives clearing organization that is replaced by clearing swaps."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "8" field "Original Swap UTI" footnote "16"
        provision "For transactions where no original swap UTI is available or not provided, a value of 'NOTAVAILABLE' can be used."]
    extract if IsCleared(ReportableEvent -> originatingWorkflowStep) = True and IsActionTypeNEWT(ReportableEvent) = True then
    //filter when IsCleared(ReportableEvent -> originatingWorkflowStep) = True and IsActionTypeNEWT(ReportableEvent) = True then
        //extract 
        BeforeTradeForEvent(ReportableEvent) then
            extract Trade -> tradeIdentifier -> assignedIdentifier
                filter [item -> identifierType = TradeIdentifierTypeEnum -> UniqueTransactionIdentifier] only-element then 
                    extract AssignedIdentifier -> identifier
    as "08 Original swap UTI"

reporting rule OriginalSwapSDRIdentifier <"Original Swap SDR Identifier">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "9" field "Original Swap SDR Identifier"
    	provision "Identifier of the swap data repository (SDR) to which the original swap was reported."]
    extract if (IsCleared(ReportableEvent -> originatingWorkflowStep) = True or (IntendedToClear(ReportableEvent)=True and IsActionTypeTerm(ReportableEvent) = True)) then
    //filter when (IsCleared(ReportableEvent -> originatingWorkflowStep) = True or (IntendedToClear(ReportableEvent)=True and IsActionTypeTerm(ReportableEvent) = True)) then
        //extract 
        ExtractPartyFromRelatedPartyByRole( ReportableEvent -> reportableInformation -> partyInformation -> relatedParty, PartyRoleEnum -> TradeRepository ) then
            extract PartyLei(Party -> partyId)
    as "09 Original swap SDR identifier"

reporting rule ClearingReceiptTimestamp <"Clearing Receipt Timestamp">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "10" field "Clearing Receipt Timestamp"
        provision "The date and time, expressed in UTC, the original swap was received by the derivatives clearing organization (DCO) for clearing and recorded by the DCOs system"]
    extract if (IsCleared(ReportableEvent -> originatingWorkflowStep) = True or (IntendedToClear(ReportableEvent)=True and IsActionTypeTerm(ReportableEvent) = True)) then
    //filter when (IsCleared(ReportableEvent -> originatingWorkflowStep) = True or (IntendedToClear(ReportableEvent)=True and IsActionTypeTerm(ReportableEvent) = True)) then
        //extract 
        ReportableEvent -> originatingWorkflowStep -> timestamp
            filter [item -> qualification = EventTimestampQualificationEnum -> clearingSubmissionDateTime] only-element then 
                extract EventTimestamp -> dateTime
    as "10 Clearing receipt timestamp"

reporting rule ClearingExceptionsAndExemptionsCounterparty1 <"Clearing Exceptions And Exemptions Counterparty 1">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "11" field "Clearing Exceptions And Exemptions Counterparty 1"
        provision "Identifies the type of clearing exception or exemption that the Counterparty 1 has elected. All applicable exceptions and exemptions must be selected. The values may be repeated as applicable."]
    //extract if IsCleared(ReportableEvent -> originatingWorkflowStep) = False and IntendedToClear(ReportableEvent) = False then
    filter when IsCleared(ReportableEvent -> originatingWorkflowStep) = False and IntendedToClear(ReportableEvent) = False then
        extract repeatable 
            ReportableEvent -> reportableInformation -> partyInformation
                filter [ item -> partyReference = ExtractReportingParty( ReportableEvent -> reportableInformation -> partyInformation, SupervisoryBodyEnum -> CFTC )]
                filter [ item -> regimeInformation -> clearingException -> clearingException any = True ]
                map [ item -> regimeInformation ] flatten
                filter [ item -> supervisoryBody = SupervisoryBodyEnum -> CFTC] then
                (
                    ClearingExceptionsAndExemptionsCounterparty1Extraction
                )

reporting rule ClearingExceptionsAndExemptionsCounterparty1Extraction <"Clearing Exceptions And Exemptions Counterparty 1">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "11" field "Clearing Exceptions And Exemptions Counterparty 1"
    	provision "Identifies the type of clearing exception or exemption that the Counterparty 1 has elected. All applicable exceptions and exemptions must be selected. The values may be repeated as applicable."]
    extract ClearingExceptionsAndExemptions( ReportingRegime -> clearingException )
        as "11-$ Clearing exceptions and exemptions - Counterparty 1"

reporting rule ClearingExceptionsAndExemptionsCounterparty2 <"Clearing Exceptions And Exemptions Counterparty 1">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "12" field "Clearing Exceptions And Exemptions Counterparty 2"
        provision "Identifies the type of the clearing exception or exemption that the Counterparty 2 has elected. All applicable exceptions and exemptions must be selected. The values may be repeated as applicable."]
    //extract if IsCleared(ReportableEvent -> originatingWorkflowStep) = False and IntendedToClear(ReportableEvent) = False then
    filter when IsCleared(ReportableEvent -> originatingWorkflowStep) = False and IntendedToClear(ReportableEvent) = False then
        extract repeatable 
            ReportableEvent -> reportableInformation -> partyInformation
                filter [ item -> partyReference = ExtractCounterparty( ReportableEvent -> reportableInformation -> partyInformation, SupervisoryBodyEnum -> CFTC, TradeForEvent( ReportableEvent ) -> tradableProduct -> counterparty -> partyReference )]
                filter [ item -> regimeInformation -> clearingException -> clearingException any = True ]
                map [ item -> regimeInformation ] flatten
                filter [ item -> supervisoryBody = SupervisoryBodyEnum -> CFTC] then
                (
                    ClearingExceptionsAndExemptionsCounterparty2Extraction
                )

reporting rule ClearingExceptionsAndExemptionsCounterparty2Extraction <"Clearing Exceptions And Exemptions Counterparty 1">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "12" field "Clearing Exceptions And Exemptions Counterparty 2"
    	provision "Identifies the type of the clearing exception or exemption that the Counterparty 2 has elected. All applicable exceptions and exemptions must be selected. The values may be repeated as applicable."]
    extract ClearingExceptionsAndExemptions( ReportingRegime -> clearingException )
        as "12-$ Clearing exceptions and exemptions - Counterparty 2"

reporting rule Counterparty1 <"Counterparty 1 (reporting counterparty)">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "13" field "Counterparty 1 (reporting counterparty)"
        provision "Identifier of the counterparty to an OTC derivative transaction who is fulfilling its reporting obligation via the report in question. In jurisdictions where both parties must report the transaction, the identifier of Counterparty 1 always identifies the reporting counterparty. In the case of an allocated derivative transaction executed by a fund manager on behalf of a fund, the fund, and not the fund manager is reported as the counterparty."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "13" field "Counterparty 1" footnote "17"
        provision "Throughout this Technical Specification, references to 'OTC derivatives' in CDE data elements should be read to mean swaps."]
    extract CDECounterparty1( ReportableEvent, SupervisoryBodyEnum -> CFTC ) as "13 Counterparty 1"

reporting rule Counterparty2 <"Counterparty 2">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "14" field "Counterparty 2"
        provision "Identifier of the second counterparty to an OTC derivative transaction. In the case of an allocated derivative transaction executed by a fund manager on behalf of a fund, the fund, and not the fund manager is reported as the counterparty."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "14" field "Counterparty 2" footnote "18"
        provision "In the case of a swap transaction for pre-allocated block executed by a fund manager on behalf of a fund, the fund manager is reported as the counterparty."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "14" field "Counterparty 2" footnote "19"
        provision "Only one counterparty should be reported. In cases where multiple counterparties are legally responsible as the second counterparty (such as an obligated group, for example), report only one of the counterparties and use the
            same counterparty for all continuation data and lifecycle events."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "14" field "Counterparty 2" footnote "20"
        provision "ROC Statement  Individuals Acting in a Business Capacity, ROC Statement - Individuals Acting in a Business Capacity"]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "14" field "Counterparty 2" footnote "21"
        provision "Throughout this Technical Specification, Privacy Law Identifier (PLI) has been added as an allowable value for all Counterparty 2 (#14) associated data elements"]
    extract CDECounterparty2( ReportableEvent, SupervisoryBodyEnum -> CFTC ) as "14 Counterparty 2"

reporting rule Counterparty2IdentifierSource <"Counterparty 2 Identifier Source">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "15" field "Counterparty 2 Identifier Source"
        provision "Source used to identify the Counterparty 2."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "15" field "Counterparty 2 Identifier Source" footnote "22"
        provision "Throughout this Technical Specification, for references to 'Privacy Law Identifiers', refer to DMO Letter No. 17-16, http://www.cftc.gov/idc/groups/public/@lrlettergeneral/documents/letter/17-16.pdf"]
    extract TradeForEvent( ReportableEvent ) -> tradableProduct -> counterparty -> partyReference
            filter [item = ExtractCounterparty( ReportableEvent -> reportableInformation -> partyInformation, SupervisoryBodyEnum -> CFTC, TradeForEvent( ReportableEvent ) -> tradableProduct -> counterparty -> partyReference )] then
		extract if Party-> person exists and Party -> person -> personId -> identifierType any = PersonIdentifierTypeEnum -> NPID
            then "NPID" 
        else if Party -> partyId -> identifierType any = PartyIdentifierTypeEnum -> LEI and Party-> person is absent
			then "LEID" as "15 Counterparty 2 identifier source"

reporting rule Counterparty1FinancialEntityIndicator <"Counterparty 1 Financial Entity Indicator">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "16" field "Counterparty 1 Financial Entity Indicator"
        provision "Indicator of whether Counterparty 1 is a financial entity as defined in CEA  2(h)(7)(C)."]
    extract if IsCleared(ReportableEvent -> originatingWorkflowStep) = False then
         ReportableEvent -> reportableInformation -> partyInformation 
            filter [ (item -> partyReference = ExtractPartyFromRelatedPartyByRole( item -> relatedParty, PartyRoleEnum -> ReportingParty ) or 
            ExtractReportingRegime( item -> regimeInformation, SupervisoryBodyEnum -> CFTC, ReportingRoleEnum -> ReportingParty ) exists) ] only-element
            then extract
                if PartyInformation -> regimeInformation -> cftcPartyInformation -> financialIndicator exists then PartyInformation -> regimeInformation -> cftcPartyInformation -> financialIndicator only-element
                else False
    as "16 Counterparty 1 financial entity indicator"

reporting rule Counterparty2FinancialEntityIndicator <"Counterparty 2 Financial Entity Indicator">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "17" field "Counterparty 2 Financial Entity Indicator"
        provision "Indicator of whether Counterparty 2 is a financial entity as defined in CEA  2(h)(7)(C)."]
    extract ReportableEvent -> reportableInformation -> partyInformation 
            filter [ (item -> partyReference = ExtractPartyFromRelatedPartyByRole( item -> relatedParty, PartyRoleEnum -> Counterparty ) or 
            ExtractReportingRegime( item -> regimeInformation, SupervisoryBodyEnum -> CFTC, ReportingRoleEnum -> Counterparty ) exists) ] only-element
            then extract
                if PartyInformation -> regimeInformation -> cftcPartyInformation -> financialIndicator exists then PartyInformation -> regimeInformation -> cftcPartyInformation -> financialIndicator only-element
                else False
    as "17 Counterparty 2 financial entity indicator"

reporting rule BuyerIdentifier <"Buyer Identifier">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "18" field "Buyer Identifier"
        provision "Identifier of the counterparty that is the buyer, as determined at the time of the transaction.
            A non-exhaustive list of examples of instruments for which this data element could apply are:
                - most forwards and forward-like contracts (except for foreign exchange forwards and foreign exchange non-deliverable forwards)
                - most options and option-like contracts including swaptions, caps and floors
                - credit default swaps (buyer/seller of protection)
                - variance, volatility and correlation swaps
                - contracts for difference and spreadbets.
            This data element is not applicable to instrument types covered by data elements Payer identifier and Receiver identifier"]
    extract CDEDirection1BuyerIdentifier(TradeForEvent( ReportableEvent ), ReportableEvent -> reportableInformation -> partyInformation )
	as "18 Buyer identifier"

reporting rule SellerIdentifier <"Seller Identifier">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "19" field "Seller Identifier"
        provision "Identifier of the counterparty that is the seller, as determined at the time of the transaction.
        A non-exhaustive list of examples of instruments for which this data element could apply are:
            - most forwards and forward-like contracts (except for foreign exchange forwards and foreign exchange non-deliverable forwards)
            - most options and option-like contracts including swaptions, caps and floors
            - credit default swaps (buyer/seller of protection)
            - variance, volatility and correlation swaps
            - contracts for difference and spreadbets.
        This data element is not applicable to instrument types covered by data elements Payer identifier and Receiver identifier"]
    extract CDEDirection1SellerIdentifier(TradeForEvent( ReportableEvent ), ReportableEvent -> reportableInformation -> partyInformation )
    as "19 Seller identifier"

reporting rule PayerIdentifierLeg1 <"Payer Identifier Leg1">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "20" field "Payer Identifier"
        rationale "Discussed on US Compliance WG - confirmed as per ISDA best practice for direction provided to CPMI-IOSCO best practice and CFTC tiebreaker logic  - Interest rate FRA  should be reported as payer/receiver."
		rationale_author "DRR Peer Review Group - 23/11/21"
        rationale "Only Credit TRS should be considered as payer/seller but not modelled yet. CR are reported as buyer/seller"
        rationale_author "DRR Peer Review Group - 07/03/22"
		rationale "Peer review recommnended to detect private individual party representations (instead of LEI scheme)."
		rationale_author "DRR Peer Review Group - 07/03/2022"
        provision "Identifier of the counterparty of the payer leg as determined at the time of the transaction.
        A non-exhaustive list of examples of instruments for which this data element could apply are:
            - most swaps and swap-like contracts including interest rate swaps, credit total return swaps, and equity swaps (except for credit default swaps, variance, volatility, and correlation swaps)
            - foreign exchange swaps, forwards, non-deliverable forwards.
        This data element is not applicable to instrument types covered by data elements Buyer identifier and Seller identifier."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "20" field "Payer Identifier" footnote "23"
        provision "For fixed-floating interest rate swaps, the payer is the counterparty paying the fixed rate"]
    extract ExtractPayerIdentifierLeg1(TradeForEvent(ReportableEvent), ReportableEvent -> reportableInformation -> partyInformation)
    as "20 Payer identifier - Leg 1"

reporting rule PayerIdentifierLeg2 <"Payer Identifier Leg2">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "20" field "Payer Identifier"
        rationale "Discussed on US Compliance WG - confirmed as per ISDA best practice for direction provided to CPMI-IOSCO best practice and CFTC tiebreaker logic  - Interest rate FRA  should be reported as payer/receiver."
		rationale_author "DRR Peer Review Group - 23/11/21"
        rationale "Only Credit TRS should be considered as payer/seller but not modelled yet. CR are reported as buyer/seller"
        rationale_author "DRR Peer Review Group - 07/03/22"
		rationale "Peer review recommnended to detect private individual party representations (instead of LEI scheme)."
		rationale_author "DRR Peer Review Group - 07/03/2022"
        provision "Identifier of the counterparty of the payer leg as determined at the time of the transaction.
        A non-exhaustive list of examples of instruments for which this data element could apply are:
            - most swaps and swap-like contracts including interest rate swaps, credit total return swaps, and equity swaps (except for credit default swaps, variance, volatility, and correlation swaps)
            - foreign exchange swaps, forwards, non-deliverable forwards.
        This data element is not applicable to instrument types covered by data elements Buyer identifier and Seller identifier."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "20" field "Payer Identifier" footnote "23"
        provision "For fixed-floating interest rate swaps, the payer is the counterparty paying the fixed rate"]
    extract ExtractPayerIdentifierLeg2(TradeForEvent(ReportableEvent), ReportableEvent -> reportableInformation -> partyInformation)
    as "20 Payer identifier - Leg 2"

reporting rule ReceiverIdentifierLeg1 <"Receiver Identifier Leg1">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "21" field "Receiver Identifier"
        rationale "Discussed on US Compliance WG - confirmed as per ISDA best practice for direction provided to CPMI-IOSCO best practice and CFTC tiebreaker logic  - Interest rate FRA  should be reported as payer/receiver."
		rationale_author "DRR Peer Review Group - 23/11/21"
        rationale "Only Credit TRS should be considered as payer/seller but not modelled yet. CR are reported as buyer/seller"
        rationale_author "DRR Peer Review Group - 07/03/22"
		rationale "Peer review recommnended to detect private individual party representations (instead of LEI scheme)."
		rationale_author "DRR Peer Review Group - 07/03/2022"
        provision "Identifier of the counterparty of the payer leg as determined at the time of the transaction.
        A non-exhaustive list of examples of instruments for which this data element could apply are:
            - most swaps and swap-like contracts including interest rate swaps, credit total return swaps, and equity swaps (except for credit default swaps, variance, volatility, and correlation swaps)
            - foreign exchange swaps, forwards, non-deliverable forwards.
        This data element is not applicable to instrument types covered by data elements Buyer identifier and Seller identifier."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "21" field "Receiver Identifier" footnote "24"
        provision "For fixed-floating interest rate swaps, the receiver is the counterparty receiving the fixed rate"]
    extract ExtractReceiverIdentifierLeg1(TradeForEvent(ReportableEvent), ReportableEvent -> reportableInformation -> partyInformation)
    as "21 Receiver identifier - Leg 1"

reporting rule ReceiverIdentifierLeg2 <"Receiver Identifier Leg2">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "21" field "Receiver Identifier"
        rationale "Discussed on US Compliance WG - confirmed as per ISDA best practice for direction provided to CPMI-IOSCO best practice and CFTC tiebreaker logic  - Interest rate FRA  should be reported as payer/receiver."
		rationale_author "DRR Peer Review Group - 23/11/21"
        rationale "Only Credit TRS should be considered as payer/seller but not modelled yet. CR are reported as buyer/seller"
        rationale_author "DRR Peer Review Group - 07/03/22"
		rationale "Peer review recommnended to detect private individual party representations (instead of LEI scheme)."
		rationale_author "DRR Peer Review Group - 07/03/2022"
        provision "Identifier of the counterparty of the payer leg as determined at the time of the transaction.
        A non-exhaustive list of examples of instruments for which this data element could apply are:
            - most swaps and swap-like contracts including interest rate swaps, credit total return swaps, and equity swaps (except for credit default swaps, variance, volatility, and correlation swaps)
            - foreign exchange swaps, forwards, non-deliverable forwards.
        This data element is not applicable to instrument types covered by data elements Buyer identifier and Seller identifier."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "21" field "Receiver Identifier" footnote "24"
        provision "For fixed-floating interest rate swaps, the receiver is the counterparty receiving the fixed rate"]
    extract ExtractReceiverIdentifierLeg2(TradeForEvent(ReportableEvent), ReportableEvent -> reportableInformation -> partyInformation)
    as "21 Receiver identifier - Leg 2"
		
reporting rule SubmitterIdentifier <"Submitter Identifier">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "22" field "Submitter Identifier"
        rationale "Check whether trade is executed in a SEF first. If it is, SEF is obliged to be the Submitter. Then check for Reporting Party and Data Submitter."
        rationale_author "DRR Peer Review Group - 09/03/22"
        provision "Identifier of the entity submitting the data to the swap data repository (SDR). The Submitter identifier will be the same as the reporting counterparty or swap execution facility (SEF), unless they use a third-party service provider to submit the data to SDR in which case, report the identifier of the third-party service provider."]
    extract ExtractSubmitterIdentifier( ReportableEvent -> reportableInformation -> partyInformation,  SupervisoryBodyEnum -> CFTC)
        as "22 Submitter identifier"

reporting rule Counterparty1FederalEntityIndicator <"Counterparty 1 Federal Entity Indicator">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "23" field "Counterparty 2 Federal Entity Indicator"
        provision "Indicator of whether Counterparty 1 is: (1) One of the following entities: a) An entity established pursuant to federal law, including, but not limited to, the following:  i. An agency as defined in 5 U.S.C.  551(1), a federal instrumentality, or a federal authority;  ii. A government corporation (examples: as such term is defined in 5 U.S.C.  103(1) or in 31 U.S.C.  9101);  iii. A government-sponsored enterprise (example: as such term is defined in 2 U.S.C.  622(8)); iv. A federally funded research and development center on the master list referenced in 48 CFR 35.017-6; and v. An executive department listed in 5 U.S.C.  101; or b) An entity chartered pursuant to federal law after formation (example: an organization listed in title 36 of the U.S. Code); or (2)  An entity that was established by, or at the direction of, one or more of the entities listed in dataElement (1), or has an ultimate parent listed in its LEI reference data that is an entity listed in dataElement (1) or in the first part of this dataElement (2). Notwithstanding the foregoing, the Counterparty 1 federal entity indicator data element does not include federally chartered depository institutions."]
    extract ReportableEvent -> reportableInformation -> partyInformation 
            filter [ (item -> partyReference = ExtractPartyFromRelatedPartyByRole( item -> relatedParty, PartyRoleEnum -> ReportingParty ) or 
            ExtractReportingRegime( item -> regimeInformation, SupervisoryBodyEnum -> CFTC, ReportingRoleEnum -> ReportingParty ) exists) ] only-element
            then extract
                if PartyInformation -> regimeInformation -> cftcPartyInformation -> federalIndicator exists then PartyInformation -> regimeInformation -> cftcPartyInformation -> federalIndicator only-element
                else False
    as "23 Counterparty 1 federal entity indicator"

reporting rule Counterparty2FederalEntityIndicator <"Counterparty 2 Federal Entity Indicator">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "24" field "Counterparty 2 Federal Entity Indicator"
        provision "Indicator of whether Counterparty 2 is: (1) One of the following entities: a) An entity established pursuant to federal law, including, but not limited to, the following:  i. An agency as defined in 5 U.S.C.  551(1), a federal instrumentality, or a federal authority;  ii. A government corporation (examples: as such term is defined in 5 U.S.C.  103(1) or in 31 U.S.C.  9101);  iii. A government-sponsored enterprise (example: as such term is defined in 2 U.S.C.  622(8)); iv. A federally funded research and development center on the master list referenced in 48 CFR 35.017-6; and v. An executive department listed in 5 U.S.C.  101; or b) An entity chartered pursuant to federal law after formation (example: an organization listed in title 36 of the U.S. Code); or (2)  An entity that was established by, or at the direction of, one or more of the entities listed in dataElement (1), or has an ultimate parent listed in its LEI reference data that is an entity listed in dataElement (1) or in the first part of this dataElement (2). Notwithstanding the foregoing, the Counterparty 2 federal entity indicator data element does not include federally chartered depository institutions."]
    extract ReportableEvent -> reportableInformation -> partyInformation 
            filter [ (item -> partyReference = ExtractPartyFromRelatedPartyByRole( item -> relatedParty, PartyRoleEnum -> Counterparty ) or 
            ExtractReportingRegime( item -> regimeInformation, SupervisoryBodyEnum -> CFTC, ReportingRoleEnum -> Counterparty ) exists) ] only-element
            then extract
                if PartyInformation -> regimeInformation -> cftcPartyInformation -> federalIndicator exists then PartyInformation -> regimeInformation -> cftcPartyInformation -> federalIndicator only-element
                else False
    as "24 Counterparty 2 federal entity indicator"

reporting rule CustomBasketIndicator <"Custom Basket Indicator">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "25" field "Custom Basket Indicator"
        rationale "The US Compliance WG agree on this consistent definition for reporting #25 Custom Basket Indicator. The definition can be used for all 5 asset classes. For purposes of reporting Custom Basket Indicator (CFTC #25), market participants generally refer to a trade as being a custom basket if it is tailored for a specific client, either by the client, by the Swap Dealer, or by both, where the weightings, constituents, roll schedules, etc., are agreed bilaterally with the client and are customized for that specific client. Custom baskets can be in any of the 5 asset classes, which is also reflected in CFTCs validation rule for #25."
        rationale_author "US Compliance Group - 29/04/22"
        provision "Indicator of whether the swap transaction is based on a custom basket."]
    	extract TradeForEvent( ReportableEvent ) then extract ProductForTrade( Trade )  then
            extract if Product -> contractualProduct -> economicTerms -> payout -> forwardPayout exists then Product -> contractualProduct -> economicTerms -> payout -> forwardPayout -> underlier -> basket exists
            else if Product -> contractualProduct -> economicTerms -> payout -> optionPayout exists then Product -> contractualProduct -> economicTerms -> payout -> optionPayout -> underlier -> basket exists or Product -> contractualProduct -> economicTerms -> payout -> optionPayout -> underlier -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> generalTerms -> basketReferenceInformation exists
            else if Product -> contractualProduct -> economicTerms -> payout -> performancePayout exists then Product -> contractualProduct -> economicTerms -> payout -> performancePayout -> underlier -> basket exists
            else if Product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout exists then Product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> generalTerms -> basketReferenceInformation exists
            else False
        as "25 Custom basket indicator"

reporting rule ActionType <"Action Type">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "26" field "Action Type"
        provision "Type of action taken on the swap transaction or type of end-of-day reporting. Actions may include, but are not limited to, new, modify, correct, error, terminate, revive, transfer out, valuation, and collateral.
            - New: An action that reports a new swap transaction. It applies to the first message relating to a new USI or UTI.
            - Modify: An action that modifies the state of a previously submitted transaction (e.g., credit event) or changes a term of a previously submitted transaction due to a newly negotiated modification (amendment) or updates previously missing information (e.g., post price swap). It does not include correction of a previous transaction.
            - Correct: An action that corrects erroneous data of a previously submitted transaction.
            - Error: An action of cancellation of a wrongly submitted entire transaction in case it never came into existence or was not subject to part 43/part 45 reporting requirements but was reported erroneously.
            - Terminate: An action that closes an existing transaction because of a new event (e.g., Compression, Novation). This does not apply to transactions that terminate at contractual maturity date.
            - Revive: An action that reinstates a swap transaction that was reported as error or terminated by mistake.
            - Transfer out: An action that transfers swap transaction from one SDR to another SDR (change of swap data repository).
            - Valuation: An update to valuation data. There will be no corresponding Event type.
            - Collateral: An update to collateral margin data. There will be no corresponding Event type. Refer to appendix F for event model sample scenarios"]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "26" field "Action Type" footnote "25"
        provision "Only one Action type value is allowed per submission. Multiple Action type values should not be submitted in one transaction report. For example, if a data element needs to be corrected on a previously submitted transaction that is getting terminated, the Correct (CORR) value should be submitted as a separate submission prior to the submission of the Terminate (TERM) transaction."]

            /* char(4) reported output:
            NEWT = New
            MODI = Modify
            CORR = Correct
            EROR = Error
            TERM = Terminate
            REVI = Revive
            PRTO = Transfer out
            VALU = Valuation
            MARU = Collateral
            */
            //TH Review -> Work in progress
    extract
        //TH review -> Is correct + quantitychange a modi with amendmentindicator=false?
        if IsActionTypeMODI(ReportableEvent) 
            then "MODI"
        //Any othe correct? Missing example1-submission4
        else if ReportableEvent -> originatingWorkflowStep -> action = ActionEnum -> Correct 
            then "CORR"
        else if ReportableEvent -> originatingWorkflowStep -> action = ActionEnum -> Cancel 
            then "EROR"
        else if Qualify_Termination(ReportableEvent -> originatingWorkflowStep -> businessEvent) = True or ReportableEvent -> reportableTrade -> state -> positionState = PositionStatusEnum -> Closed
        //or ReportableEvent -> reportableTrade -> state -> positionState = PositionStatusEnum -> Executed
            then "TERM"
        //TH Review -> pending review newt vs modi for novations
        else if (ReportableEvent -> originatingWorkflowStep -> action = ActionEnum -> New and ReportableEvent -> originatingWorkflowStep -> businessEvent only exists) or ReportableEvent -> reportableTrade -> state -> positionState = PositionStatusEnum -> Executed or ReportableEvent -> reportableTrade -> state is absent
            then "NEWT"
        else "ToDo"
    as "26 Action type"

reporting rule EventType <"Event Type">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "27" field "Event Type"
         provision "Explanation or reason for the action being taken on the swap transaction. Events may include, but are not limited to, trade, novation, compression or risk reduction exercise, early termination, clearing, exercise, allocation, clearing and allocation, credit event, and transfer.
            - Trade: A creation, modification, or termination of a transaction.
            - Novation: A novation legally moves partial or all of the financial risks of a swap from a transferor to a transferee and has the effect of terminating/modifying the original transaction and creating a new transaction to identify the exposure between the transferor/transferee and remaining party.
            - Compression or Risk Reduction Exercise: Compressions and risk reduction exercises generally have the effect of terminating or modifying (i.e., reducing the notional value) a set of existing transactions and of creating a set of new transaction(s). These processes result in largely the same exposure of market risk that existed prior to the event for the counterparty.
            - Early termination: Termination of an existing swap transaction prior to scheduled termination or maturity date.
            - Clearing: Central clearing is a process where a derivatives clearing organization interposes itself between counterparties to contracts, becoming the buyer to every seller and the seller to every buyer. It has the effect of terminating an existing transaction between the buyer and the seller and thereby ensuring the performance of open contracts.
            - Exercise: The process by which a counterparty fully or partially exercises their rights specified in the contract of an option or a swaption.
            - Allocation: The process by which an agent, having facilitated a single swap transaction on behalf of several clients, allocates a portion of the executed swap to the clients.
            - Clearing and Allocation: A simultaneous clearing and allocation event in a derivatives clearing organization.
            - Credit event: An event or trigger that results in the modification of the state of a previously submitted credit derivative transaction. Applies only to credit derivatives.
            - Transfer: The process by which a swap is transferred to another SDR that  has the effect of the closing of the swap transaction at one SDR or opening of the same swap transaction using the same UTI/USI in a different SDR (new)."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "27" field "Event Type" footnote "26"
        provision "Novation  see definition in  45.1(a)"]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "27" field "Event Type" footnote "27"
        provision "Allocation  see definition in  45.1(a)"]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "27" field "Event Type" footnote "28"
        provision "Transfer  A reporting counterparty may change the swap data repository to which the transaction is reported pursuant to rule  45.10(d)."]
    /*
    TRAD = Trade
    NOVA = Novation
    COMP = Compression or Risk Reduction
    ETRM = Early termination
    CLRG = Clearing
    EXER = Exercise
    ALOC = Allocation
    CLAL = Clearing & Allocation
    CREV = Credit event
    PTNG = Transfer
    CORP = Corporate event
    UPDT = Upgrade
    */
    //TH Review -> Work in progress
    extract ReportableEvent -> originatingWorkflowStep then
        extract
        if Qualify_Novation(WorkflowStep -> businessEvent) = True or Qualify_PartialNovation(WorkflowStep -> businessEvent) = True then "NOVA"
        else if Qualify_Termination(WorkflowStep -> businessEvent) = True then "ETRM"
        else if Qualify_ClearedTrade(WorkflowStep -> businessEvent) = True or WorkflowStep -> workflowState -> workflowStatus = WorkflowStatusEnum -> Cleared then "CLRG"
        else if Qualify_Allocation(WorkflowStep -> businessEvent) = True or Qualify_Reallocation(WorkflowStep -> businessEvent) = True then "ALOC"
        else if Qualify_Compression(WorkflowStep -> businessEvent) = True then "COMP"
        else if Qualify_Exercise(WorkflowStep -> businessEvent) = True then "EXER"
        else if Qualify_StockSplit(WorkflowStep -> businessEvent) = True then "CORP"
        else if
            Qualify_ContractFormation(WorkflowStep -> businessEvent) = True
            or Qualify_PartialTermination(WorkflowStep -> businessEvent) = True
            or Qualify_Increase (WorkflowStep -> businessEvent) = True
            //or Qualify_Decrease (BusinessEvent) = True
            or Qualify_Renegotiation (WorkflowStep -> businessEvent) = True
            or Qualify_IndexTransition(WorkflowStep -> businessEvent) = True
            or Qualify_FullReturn(WorkflowStep -> businessEvent) = True
            or WorkflowStep -> businessEvent -> instruction -> primitiveInstruction -> quantityChange exists
            or WorkflowStep -> businessEvent -> instruction -> primitiveInstruction -> transfer exists
                then "TRAD"
        //TH Review -> to be removed when releasing. Cancel must report {blank}
        else if WorkflowStep -> action = ActionEnum -> Cancel then "---"
        else "ToDo"
    as "27 Event type"

reporting rule AmendmentIndicator <"Amendment Indicator">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "28" field "Amendment Indicator"
        provision "Indicator of whether the modification of the swap transaction reflects newly agreed upon term(s) from the previously negotiated terms."]
    //TH Review -> Work in progress
    extract if IsActionTypeMODI (ReportableEvent) then
        ReportableEvent -> originatingWorkflowStep -> businessEvent then
            extract if Qualify_PartialNovation (BusinessEvent) = True then "True"
            else if Qualify_Novation (BusinessEvent) = True then "False"
            else if Qualify_Compression (BusinessEvent) = True then "False"
            else if Qualify_Allocation (BusinessEvent) = True then "False"
            else if Qualify_Increase(BusinessEvent) = True or (BusinessEvent -> instruction -> primitiveInstruction -> quantityChange exists and BusinessEvent ->instruction -> primitiveInstruction -> quantityChange -> direction any = QuantityChangeDirectionEnum -> Decrease) then "True"
            else if Qualify_Exercise(BusinessEvent) = True then "False"
            else if Qualify_CashTransfer (BusinessEvent) = True then "False"
            else "ToDo"
    as "28 Amendment indicator"

reporting rule EventIdentifier <"Event Identifier">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "29" field "Event Identifier"
        provision "Unique identifier to link swap transactions resulting from an event may be, but is not limited to, compression, and credit event. The unique identifier may be assigned by the reporting counterparty or a service provider."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "29" field "Event Identifier" footnote "29"
        provision "The identifier which relates to the same event should be unique per event."]
    extract ReportableEvent -> originatingWorkflowStep -> eventIdentifier -> assignedIdentifier -> identifier only-element as "29 Event identifier"

reporting rule EventTimestamp <"Event Timestamp">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "30" field "Event Timestamp"
        provision "Date and time of occurrence of the event as determined by the reporting counterparty or a service provider. In the case of a clearing event, date and time when the original swap is accepted by the derivative clearing organization (DCO) for clearing and recorded by the DCOs system should be reported in this data element. The time element is as specific as technologically practicable."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "30" field "Event Timestamp" footnote "30"
        provision "In the case of collateral update (Action type = 'MARU'), this is the date for which the information contained in the report is provided. Time portion should be reported as '00:00:00'."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "30" field "Event Timestamp" footnote "31"
        provision "Both the date and time portion are required to be reported. If the time portion is not available, report '00:00:00' for the time portion."]
    extract ReportableEvent -> originatingWorkflowStep -> timestamp
        filter [ item -> qualification = EventTimestampQualificationEnum -> eventCreationDateTime] distinct only-element
        map [ item -> dateTime ] 
        //then
        //	extract EventTimestamp -> dateTime
    as "30 Event timestamp"

reporting rule NotionalAmountLeg1 <"Notional Amount Leg 1">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "31" field "Notional Amount"
        rationale "Peer Review Group members approved the approach for DRR to calculating Notional amount for Commodities."
        rationale_author "Peer Review Group - 6/7/2022"
        provision "For each leg of the transaction, where applicable:
                    - for OTC derivative transactions negotiated in monetary amounts, amount specified in the contract.
                    - for OTC derivative transactions negotiated in non-monetary amounts, refer to appendix B for converting notional amounts for non-monetary amounts.
                    In addition:
					- For OTC derivative transactions with a notional amount schedule, the initial notional amount, agreed by the counterparties at the inception of the transaction, is reported in this data element.
                    - For OTC foreign exchange options, in addition to this data element, the amounts are reported using the data elements Call amount and Put amount.
                    - For amendments or lifecycle events, the resulting outstanding notional amount is reported; (steps in notional amount schedules are not considered to be amendments or lifecycle events);
                    - Where the notional amount is not known when a new transaction is reported, the notional amount is updated as it becomes available."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "31" field "Notional Amount" footnote "32"
        provision "Notional amount for CDS should reflect the gross amount and not the net amount after reflecting version incrementing due to a credit event"]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "31" field "Notional Amount" footnote "33"
        provision "In the case of a lifecycle event that is a full termination before the swap maturity date, the full terminated value should be reported in the notional data element."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "31" field "Notional Amount" footnote "34"
        provision "'99999999999999999999.99999' is accepted when the value is not available at the time of reporting. 25 numerical characters including decimals."]
    extract 
        if IsActionTypeTerm(ReportableEvent) then BeforeTradeForEvent( ReportableEvent )
        else TradeForEvent( ReportableEvent ) 
    then extract 
        //Equity option, Equity dividend and Commodity Option
        if IsCommodityOption( ProductForTrade( Trade ) ) then CDECommodityOptionNotional( Trade -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> optionPayout only-element )
        //Credit swaption
        else if IsCreditSwaption( ProductForTrade( Trade ) ) then  CDECreditNotional( UnderlierForProduct( ProductForTrade( Trade ) ) ->  contractualProduct -> economicTerms -> payout -> creditDefaultPayout ) 
        //FX forward and option
        else if IsFXForward( Trade ) or IsFXOption( Trade ) then CDEFXNotional( FXLeg1( Trade ) -> priceQuantity -> quantitySchedule )
        //IR Swaption
        else if Qualify_InterestRate_Option_Swaption( ProductForTrade( Trade ) -> contractualProduct -> economicTerms ) = True then CDEInterestRateNotional( InterestRateLeg1( UnderlierForProduct( ProductForTrade( Trade ) ) ) )
        //Equity options
        //Monetary quantity schedule
        else if IsEquityOption( ProductForTrade( Trade ) ) = True and ProductForTrade( Trade ) -> contractualProduct -> economicTerms -> payout -> optionPayout -> priceQuantity -> quantitySchedule -> unitOfAmount -> currency exists  then ProductForTrade( Trade ) -> contractualProduct -> economicTerms -> payout -> optionPayout -> priceQuantity -> quantitySchedule -> amount
        //Equity options
        //Non-monetary quantity schedule
        else if IsEquityOption( ProductForTrade( Trade ) ) = True and ProductForTrade( Trade ) -> contractualProduct -> economicTerms -> payout -> optionPayout -> priceQuantity -> quantitySchedule -> unitOfAmount -> financialUnit exists  then ProductForTrade( Trade ) -> contractualProduct -> economicTerms -> payout -> optionPayout -> priceQuantity -> quantitySchedule -> amount * ProductForTrade( Trade ) -> contractualProduct -> economicTerms -> payout -> optionPayout -> exerciseTerms -> strike -> strikePrice -> amount
        //Equity variance swaps
        else if IsEquity( ProductForTrade( Trade ) ) then CDEPerformanceNotional( Trade -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> performancePayout )
        //Credit
        else if IsCreditDefaultSwap( ProductForTrade( Trade ) ) then CDECreditNotional( Trade -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout )
        //Commodity fixed/float swaps
        else if Qualify_Commodity_Swap_FixedFloat(Trade -> tradableProduct -> product -> contractualProduct -> economicTerms) then CDECommodityNotional( CommodityLeg1 (Trade -> tradableProduct -> product) -> priceQuantity -> quantitySchedule -> amount, FixedPriceLeg2(Trade -> tradableProduct -> product) -> fixedPrice -> price -> amount )
        /*//Commodity Basis
        //TH Comment: This following logic for Commodity Basis is not correct, but at this moment we do not have acces to the last available spot price of the underlying asset
		else if Qualify_Commodity_Swap_Basis(Trade -> tradableProduct -> product -> contractualProduct -> economicTerms) then CDECommodityNotional( Trade -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> commodityPayout only-element -> priceQuantity -> resolvedQuantity -> amount, Trade -> tradableProduct -> tradeLot -> priceQuantity -> price only-element -> amount )*/
        //IR Swap
        else if Qualify_AssetClass_InterestRate_Swap(ProductForTrade(Trade) -> contractualProduct -> economicTerms ) = True then 
            CDEInterestRateNotional( InterestRateLeg1( ProductForTrade( Trade ) ) ) 
        as "31 Notional amount-Leg 1"

reporting rule NotionalAmountLeg2 <"Notional Amount Leg 2">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "31" field "Notional Amount"
        rationale "Peer Review Group members approved the approach for DRR to calculating Notional amount for Commodities."
        rationale_author "Peer Review Group - 6/7/2022"
		provision "For each leg of the transaction, where applicable:
                    - for OTC derivative transactions negotiated in monetary amounts, amount specified in the contract.
                    - for OTC derivative transactions negotiated in non-monetary amounts, refer to appendix B for converting notional amounts for non-monetary amounts.
                    In addition:
					- For OTC derivative transactions with a notional amount schedule, the initial notional amount, agreed by the counterparties at the inception of the transaction, is reported in this data element.
                    - For OTC foreign exchange options, in addition to this data element, the amounts are reported using the data elements Call amount and Put amount.
                    - For amendments or lifecycle events, the resulting outstanding notional amount is reported; (steps in notional amount schedules are not considered to be amendments or lifecycle events);
                    - Where the notional amount is not known when a new transaction is reported, the notional amount is updated as it becomes available."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "31" field "Notional Amount" footnote "32"
        provision "Notional amount for CDS should reflect the gross amount and not the net amount after reflecting version incrementing due to a credit event"]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "31" field "Notional Amount" footnote "33"
        provision "In the case of a lifecycle event that is a full termination before the swap maturity date, the full terminated value should be reported in the notional data element."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "31" field "Notional Amount" footnote "34"
        provision "'99999999999999999999.99999' is accepted when the value is not available at the time of reporting. 25 numerical characters including decimals."]
    extract if IsActionTypeTerm(ReportableEvent) then BeforeTradeForEvent( ReportableEvent )
        else TradeForEvent( ReportableEvent )
        then extract
            //Swaption
            if Qualify_InterestRate_Option_Swaption( ProductForTrade( Trade ) -> contractualProduct -> economicTerms ) = True or Qualify_CreditDefaultSwaption ( ProductForTrade( Trade ) -> contractualProduct -> economicTerms ) = True then 
                CDEInterestRateNotional( InterestRateLeg2( UnderlierForProduct( ProductForTrade( Trade ) ) ) )
            //FX Forward and option
            else if IsFXForward( Trade ) or IsFXOption ( Trade ) then
                CDEFXNotional( FXLeg2( Trade) -> priceQuantity -> quantitySchedule )
            //Commodity Fixed/Float Swap
            else if Qualify_Commodity_Swap_FixedFloat( ProductForTrade( Trade ) -> contractualProduct -> economicTerms ) then 
                CDECommodityNotional( FixedPriceLeg2( ProductForTrade( Trade ) ) -> priceQuantity -> quantitySchedule -> amount, FixedPriceLeg2( ProductForTrade( Trade ) ) -> fixedPrice -> price -> amount )
            //IR Swap
            else if Qualify_AssetClass_InterestRate_Swap(ProductForTrade(Trade) -> contractualProduct -> economicTerms ) = True or Qualify_AssetClass_CreditDefault( ProductForTrade(Trade) -> contractualProduct -> economicTerms ) = True then 
                CDEInterestRateNotional( InterestRateLeg2( ProductForTrade( Trade ) ) )
        as "31 Notional amount-Leg 2"

reporting rule NotionalCurrencyLeg1 <"Notional Currency Leg 1">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "32" field "Notional Currency Leg 1"
        provision "For each leg of the transaction, where applicable: currency in which the notional amount is denominated."]
    extract if IsActionTypeTerm(ReportableEvent) then BeforeTradeForEvent( ReportableEvent )
            else TradeForEvent( ReportableEvent ) then extract
            //Equity option, Equity dividend and Commodity Option
            if IsCommodityOption( ProductForTrade( Trade ) ) then CDEOptionNotionalCurrency( Trade -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> optionPayout only-element )
            //Credit swaption
            else if Qualify_CreditDefaultSwaption ( ProductForTrade( Trade ) -> contractualProduct -> economicTerms ) = True then  CDECreditNotionalCurrency( UnderlierForProduct( ProductForTrade( Trade ) ) ->  contractualProduct -> economicTerms -> payout -> creditDefaultPayout ) 
            //FX forward and option
            else if IsFXForward( Trade ) or IsFXOption( Trade ) then CDEFXNotionalCurrency( FXLeg1( Trade ) -> priceQuantity -> quantitySchedule )
            //IR Swaption
            else if Qualify_InterestRate_Option_Swaption( ProductForTrade( Trade ) -> contractualProduct -> economicTerms ) = True then CDEInterestRateNotionalCurrency( InterestRateLeg1( UnderlierForProduct( ProductForTrade( Trade ) ) ) )
            //Equity options
            //Monetary quantity schedule
            else if IsEquityOption( ProductForTrade( Trade ) ) and ProductForTrade( Trade ) -> contractualProduct -> economicTerms -> payout -> optionPayout -> priceQuantity -> quantitySchedule -> unitOfAmount -> currency exists then ProductForTrade( Trade ) -> contractualProduct -> economicTerms -> payout -> optionPayout -> priceQuantity -> quantitySchedule -> unitOfAmount -> currency
            //Equity options
            //Non-monetary quantity schedule
            else if IsEquityOption( ProductForTrade( Trade ) ) and ProductForTrade( Trade ) -> contractualProduct -> economicTerms -> payout -> optionPayout -> priceQuantity -> quantitySchedule -> unitOfAmount -> financialUnit exists then ProductForTrade( Trade ) -> contractualProduct -> economicTerms -> payout -> optionPayout -> exerciseTerms -> strike -> strikePrice -> unitOfAmount -> currency
            //Equity variance swaps
            else if IsEquity( ProductForTrade( Trade ) ) then CDEPerformanceNotionalCurrency( Trade -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> performancePayout )
            //Credit
            else if IsCreditDefaultSwap( ProductForTrade( Trade ) ) then CDECreditNotionalCurrency( Trade -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout )
            //Commodity fixed/float swaps
            else if Qualify_Commodity_Swap_FixedFloat( Trade -> tradableProduct -> product -> contractualProduct -> economicTerms) then CDECommodityNotionalCurrency( FixedPriceLeg2(Trade -> tradableProduct -> product) -> fixedPrice -> price )
            /*//Commodity Basis
            //TH Comment: This following logic for Commodity Basis is not correct, but at this moment we do not have acces to the last available spot price of the underlying asset
		        else if Qualify_Commodity_Swap_Basis(Trade -> tradableProduct -> product -> contractualProduct -> economicTerms) then CDECommodityNotionalCurrency( Trade -> tradableProduct -> tradeLot -> priceQuantity -> price only-element )*/
            //IR Swap
            else if Qualify_AssetClass_InterestRate_Swap(ProductForTrade(Trade) -> contractualProduct -> economicTerms ) = True then 
            CDEInterestRateNotionalCurrency( InterestRateLeg1( ProductForTrade( Trade ) ) )  
        as "32 Notional currency-Leg 1"

reporting rule NotionalCurrencyLeg2 <"Notional Currency Leg 2">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "32" field "Notional Currency Leg 2"
        provision "For each leg of the transaction, where applicable: currency in which the notional amount is denominated."]
    extract if IsActionTypeTerm(ReportableEvent) then BeforeTradeForEvent( ReportableEvent )
        else TradeForEvent( ReportableEvent )
        then extract 
            //IR Swaption and Credit Swaption
            if Qualify_InterestRate_Option_Swaption( ProductForTrade( Trade ) -> contractualProduct -> economicTerms ) = True or Qualify_CreditDefaultSwaption ( ProductForTrade( Trade ) -> contractualProduct -> economicTerms ) = True then 
                CDEInterestRateNotionalCurrency( InterestRateLeg2( UnderlierForProduct( ProductForTrade( Trade ) ) ) ) 
            //FX Forward and FX Option
            else if IsFXForward( Trade ) or IsFXOption ( Trade ) then
                CDEFXNotionalCurrency( FXLeg2( Trade) -> priceQuantity -> quantitySchedule )
            //Commodity fixed/float swaps
            else if Qualify_Commodity_Swap_FixedFloat( ProductForTrade( Trade ) -> contractualProduct -> economicTerms ) then 
                FixedPriceLeg2( ProductForTrade( Trade ) ) -> fixedPrice -> price -> unitOfAmount -> currency
            //IR and Credit
            else if Qualify_AssetClass_InterestRate_Swap(ProductForTrade(Trade) -> contractualProduct -> economicTerms ) = True or Qualify_AssetClass_CreditDefault( ProductForTrade(Trade) -> contractualProduct -> economicTerms ) = True then 
                CDEInterestRateNotionalCurrency( InterestRateLeg2( ProductForTrade( Trade ) ) )
        as "32 Notional currency-Leg 2"
//TH Review -> Remove once reporting rule syntax is updated
/*        
reporting rule NotionalAmountLeg1 <"Notional Amount Leg 1">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "31" field "Notional Amount"
        provision "For each leg of the transaction, where applicable:
                    - for OTC derivative transactions negotiated in monetary amounts, amount specified in the contract.
                    - for OTC derivative transactions negotiated in non-monetary amounts, refer to appendix B for converting notional amounts for non-monetary amounts.
                    In addition:
					- For OTC derivative transactions with a notional amount schedule, the initial notional amount, agreed by the counterparties at the inception of the transaction, is reported in this data element.
                    - For OTC foreign exchange options, in addition to this data element, the amounts are reported using the data elements Call amount and Put amount.
                    - For amendments or lifecycle events, the resulting outstanding notional amount is reported; (steps in notional amount schedules are not considered to be amendments or lifecycle events);
                    - Where the notional amount is not known when a new transaction is reported, the notional amount is updated as it becomes available."]
    extract if IsActionTypeTerm(ReportableEvent) then BeforeTradeForEvent( ReportableEvent )
        else TradeForEvent( ReportableEvent )
        then
        (
            CDENotional
                as "31 Notional amount-Leg 1"
            ,
            extract ProductForTrade( Trade )  then
                extract
                    if  IsSwaption( Product ) then
                        InterestRateLeg1( UnderlierForProduct( Product )  )
                    else
                        InterestRateLeg1( Product )
                    then
                CDEInterestRateNotional
                    as "31 Notional amount-Leg 1"
            ,
            extract FXLeg1( Trade ) then
                extract Cashflow -> priceQuantity -> resolvedQuantity then
                CDEFXNotional
                    as "31 Notional amount-Leg 1"
        )

reporting rule NotionalAmountLeg2 <"Notional Amount Leg 2">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "31" field "Notional Amount"
		provision "For each leg of the transaction, where applicable:
                    - for OTC derivative transactions negotiated in monetary amounts, amount specified in the contract.
                    - for OTC derivative transactions negotiated in non-monetary amounts, refer to appendix B for converting notional amounts for non-monetary amounts.
                    In addition:
					- For OTC derivative transactions with a notional amount schedule, the initial notional amount, agreed by the counterparties at the inception of the transaction, is reported in this data element.
                    - For OTC foreign exchange options, in addition to this data element, the amounts are reported using the data elements Call amount and Put amount.
                    - For amendments or lifecycle events, the resulting outstanding notional amount is reported; (steps in notional amount schedules are not considered to be amendments or lifecycle events);
                    - Where the notional amount is not known when a new transaction is reported, the notional amount is updated as it becomes available."]
    extract if IsActionTypeTerm(ReportableEvent) then BeforeTradeForEvent( ReportableEvent )
        else TradeForEvent( ReportableEvent )
        then
        (
            extract ProductForTrade( Trade )  then
                extract
                    if IsSwaption( Product ) then
                        InterestRateLeg2( UnderlierForProduct( Product ) )
                    else if IsCreditSwaption( Product ) then
                        InterestRateLeg2( UnderlierForProduct( Product ) )
                    else
                        InterestRateLeg2( Product )
                    then
                CDEInterestRateNotional
                    as "31 Notional amount-Leg 2"
            ,
            extract FXLeg2( Trade ) then
                extract Cashflow -> priceQuantity -> resolvedQuantity
				then CDEFXNotional
				    as "31 Notional amount-Leg 2"
            ,
            extract ProductForTrade( Trade ) then
                extract if Qualify_Commodity_Swap_FixedFloat( Product -> contractualProduct -> economicTerms) then
                    FixedPriceLeg2 (Product) then 
                        extract FixedPricePayout -> priceQuantity -> resolvedQuantity -> amount * FixedPricePayout -> fixedPrice -> price -> amount
            as "31 Notional amount-Leg 2"
        )

reporting rule NotionalCurrencyLeg1 <"Notional Currency Leg 1">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "32" field "Notional Currency Leg 1"
        provision "For each leg of the transaction, where applicable: currency in which the notional amount is denominated."]
    extract if IsActionTypeTerm(ReportableEvent) then BeforeTradeForEvent( ReportableEvent )
        else TradeForEvent( ReportableEvent )
        then
        (
            CDENotionalCurrency
                as "32 Notional currency-Leg 1"
            ,
            extract ProductForTrade( Trade )  then
                extract
                    if IsSwaption( Product ) then
                        InterestRateLeg1( UnderlierForProduct( Product ) )
                    else
                        InterestRateLeg1( Product )
                    then
                CDEInterestRateNotionalCurrency
                    as "32 Notional currency-Leg 1"
            ,
            extract FXLeg1( Trade ) then
                extract Cashflow -> priceQuantity -> resolvedQuantity then
                CDEFXNotionalCurrency
                    as "32 Notional currency-Leg 1"
        )

reporting rule NotionalCurrencyLeg2 <"Notional Currency Leg 2">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "32" field "Notional Currency Leg 2"
        provision "For each leg of the transaction, where applicable: currency in which the notional amount is denominated."]
    extract if IsActionTypeTerm(ReportableEvent) then BeforeTradeForEvent( ReportableEvent )
        else TradeForEvent( ReportableEvent )
        then
        (
            extract ProductForTrade( Trade )  then
                extract
                    if IsSwaption( Product ) then
                        InterestRateLeg2( UnderlierForProduct( Product ) )
                    else if IsCreditSwaption( Product ) then
                        InterestRateLeg2( UnderlierForProduct( Product ) )
                    else
                        InterestRateLeg2( Product )
                    then
                CDEInterestRateNotionalCurrency
                    as "32 Notional currency-Leg2"
            ,
            extract FXLeg2( Trade ) then
                extract Cashflow -> priceQuantity -> resolvedQuantity then
                CDEFXNotionalCurrency
                    as "32 Notional currency-Leg2"
            ,
            extract ProductForTrade( Trade )  then
                extract if Qualify_Commodity_Swap_FixedFloat( Product -> contractualProduct -> economicTerms) then
                    FixedPriceLeg2(Product) then extract FixedPricePayout -> fixedPrice -> price -> unitOfAmount -> currency
            as "32 Notional currency-Leg 2"
        )
*/
reporting rule NotionalAmountScheduleLeg1 <"Notional Amount Schedule">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "33-35" field "Notional Amount Schedule"
		rationale "Model only applicable for back-to-back schedules. Repeatable field 35 (endDate) not applicable and therefore removed"
        rationale_author "DRR Peer Review Group - 03/12/21"
		provision "Fields 33-35 are repeatable and shall be populated in the case of derivatives involving notional amount schedules"]
    extract TradeForEvent( ReportableEvent ) then
    (
        extract ProductForTrade( Trade )  then
        (
            //IR
            (
                filter when IsSwaption( Product ) then extract UnderlierForProduct( Product ) then extract InterestRateLeg1( Product ),
                extract InterestRateLeg1( Product )
            ) then extract InterestRatePayout -> priceQuantity
            ,
            //CR
            (
                filter when IsCreditSwaption( Product ) then extract UnderlierForProduct( Product ) then
                    extract Product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout,
                extract Product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout
            ) then extract CreditDefaultPayout -> priceQuantity
            ,
            //CO
            filter when IsCommodity( Product ) then extract CommodityLeg1( Product ) then extract CommodityPayout -> priceQuantity
            ,
            //EQ
            /*filter when IsEquity( Product ) then
                extract Product -> contractualProduct -> economicTerms -> payout -> equityPayout -> priceQuantity*/
            //TH -> eq2perf update proposal
            filter when IsEquity( Product ) then
                extract Product -> contractualProduct -> economicTerms -> payout -> performancePayout -> priceQuantity
            ,
            filter when IsVolatilitySwap ( Product ) or IsVarianceSwap ( Product ) then
                extract Product -> contractualProduct -> economicTerms -> payout -> performancePayout -> priceQuantity
        )
        ,
        //FX
        filter when IsFXForward( Trade ) then
            extract FXLeg1( Trade ) then extract Cashflow -> priceQuantity,
        filter when IsFXOption( Trade ) then
            extract FXLeg1( Trade ) then extract Cashflow -> priceQuantity
    ) then extract repeatable ResolvablePriceQuantity -> quantitySchedule -> step then
        (
            NotionalAmountScheduleLeg1Amount,
            NotionalAmountScheduleLeg1EffectiveDate
            //,
            //NotionalAmountScheduleLeg1EndDate
        )

reporting rule NotionalAmountScheduleLeg2 <"Notional Amount Schedule">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "33-35" field "Notional Amount Schedule"
		rationale "Model only applicable for back-to-back schedules. Repeatable field 35 (endDate) not applicable and therefore removed"
        rationale_author "DRR Peer Review Group - 03/12/21"
		provision "Fields 33-35 are repeatable and shall be populated in the case of derivatives involving notional amount schedules"]
    
    extract TradeForEvent( ReportableEvent ) then
    (
        extract ProductForTrade( Trade )  then
        (
            //IR, CR, EQ, CO
            (
                filter when IsSwaption( Product ) then extract UnderlierForProduct( Product ) then extract InterestRateLeg2( Product ),
                filter when IsCreditSwaption( Product ) then extract UnderlierForProduct( Product ) then extract InterestRateLeg2( Product ),
                extract InterestRateLeg2( Product )
            ) then extract InterestRatePayout -> priceQuantity
            ,
            //CO
            extract CommodityLeg2( Product ) then extract CommodityPayout -> priceQuantity
            ,
            extract FixedPriceLeg2( Product ) then extract FixedPricePayout -> priceQuantity
        )
        ,
        //FX
        filter when IsFXForward( Trade ) then
            extract FXLeg2( Trade ) then extract Cashflow -> priceQuantity,
        filter when IsFXOption( Trade ) then
            extract FXLeg2( Trade ) then extract Cashflow -> priceQuantity
    ) then extract repeatable ResolvablePriceQuantity -> quantitySchedule -> step then
        (
            NotionalAmountScheduleLeg2Amount,
            NotionalAmountScheduleLeg2EffectiveDate
            //,
            //NotionalAmountScheduleLeg2EndDate
        )
		
reporting rule NotionalAmountScheduleLeg1Amount <"Notional amount in effect on associated effective date of leg 1">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "33" field "Notional amount in effect on associated effective date of leg 1"
        provision "For each leg of the transaction, where applicable:
                   for OTC derivative transactions negotiated in monetary amounts with a notional amount schedule:
                        - Notional amount which becomes effective on the associated unadjusted effective date.
                   The initial notional amount and associated unadjusted effective and end date are reported as the first values of the schedule.
                   This data element is not applicable to OTC derivative transactions with notional amounts that are condition- or event-dependent. The currency of the varying notional amounts in the schedule is reported in Notional currency."]
		CDENotionalAmountScheduleAmount
		    as "33/35-$ 33 Notional amount leg 1"

reporting rule NotionalAmountScheduleLeg2Amount <"Notional amount in effect on associated effective date of leg 2">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "33" field "Notional amount in effect on associated effective date of leg 2"
        provision "For each leg of the transaction, where applicable:
                   for OTC derivative transactions negotiated in monetary amounts with a notional amount schedule:
                        - Notional amount which becomes effective on the associated unadjusted effective date.
                   The initial notional amount and associated unadjusted effective and end date are reported as the first values of the schedule.
                   This data element is not applicable to OTC derivative transactions with notional amounts that are condition- or event-dependent. The currency of the varying notional amounts in the schedule is reported in Notional currency."]
		CDENotionalAmountScheduleAmount
		    as "33/35-$ 33 Notional amount leg 2"

reporting rule NotionalAmountScheduleLeg1EffectiveDate <"Effective date of the notional amount of leg 1">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "34" field "Effective date of the notional amount of leg 1"
        provision "For each leg of the transaction, where applicable: for OTC derivative transactions negotiated in monetary amounts with a notional amount schedule: Unadjusted date on which the associated notional amount becomes effective This data element is not applicable to OTC derivative transactions with notional amounts that are condition- or event-dependent. The currency of the varying notional amounts in the schedule is reported in Notional currency."]
		CDENotionalAmountScheduleEffectiveDate
		    as "33/35-$ 34 Effective date leg 1"

reporting rule NotionalAmountScheduleLeg2EffectiveDate <"Effective date of the notional amount of leg 2">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "34" field "Effective date of the notional amount of leg 2"
        provision "For each leg of the transaction, where applicable: for OTC derivative transactions negotiated in monetary amounts with a notional amount schedule: Unadjusted date on which the associated notional amount becomes effective This data element is not applicable to OTC derivative transactions with notional amounts that are condition- or event-dependent. The currency of the varying notional amounts in the schedule is reported in Notional currency."]
		CDENotionalAmountScheduleEffectiveDate
		    as "33/35-$ 34 Effective date leg 2"

reporting rule NotionalAmountScheduleLeg1EndDate <"End date of the notional amount of leg 1">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "35" field "End date of the notional amount of leg 1"
        rationale "The model for this field should be completed to support non-contiguous schedules"
        provision "For each leg of the transaction, where applicable: for OTC derivative transactions negotiated in monetary amounts with a notional amount schedule: Unadjusted end date of the notional amount (not applicable if the unadjusted end date of a given schedules period is back-to-back with the unadjusted effective date of the subsequent period). This data element is not applicable to OTC derivative transactions with notional amounts that are condition- or event-dependent. The currency of the varying notional amounts in the schedule is reported in Notional currency."]
		CDENotionalAmountScheduleEndDate
		    as "33/35-$ 35 End date leg 1"

reporting rule NotionalAmountScheduleLeg2EndDate <"End date of the notional amount of leg 2">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "35" field "End date of the notional amount of leg 2"
        rationale "The model for this field should be completed to support non-contiguous schedules"
        provision "For each leg of the transaction, where applicable: for OTC derivative transactions negotiated in monetary amounts with a notional amount schedule: Unadjusted end date of the notional amount (not applicable if the unadjusted end date of a given schedules period is back-to-back with the unadjusted effective date of the subsequent period). This data element is not applicable to OTC derivative transactions with notional amounts that are condition- or event-dependent. The currency of the varying notional amounts in the schedule is reported in Notional currency."]
        CDENotionalAmountScheduleEndDate
		    as "33/35-$ 35 End date leg 2"

reporting rule CallAmount <"Call Amount">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "36" field "Call Amount"
        rationale "Discussed at Peer Review. Group largely in agreement with proposed logic - only open question was around Credit Options which members agreed to take away and revert on at the next peer review."
        rationale_author "DRR Peer Review Group - 17/11/21"
        rationale "Discussed at the DRR Peer Review call. No further input on logic for credit options:
		    - Call, in case of payer option type
		    - Put, in case of receiver option type"
	    rationale_author "DRR Peer Review Group - 19/01/22"
		provision "For foreign exchange options, the monetary amount that the option gives the right to buy."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "36" field "Call Amount" footnote "35"
        provision "DMO expects this data element and the corresponding currency data element for all asset classes."]
    CDECallAmount as "36 Call amount"

reporting rule CallCurrency <"Call Currency">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "37" field "Call Currency"
        rationale "Discussed at Peer Review. Group largely in agreement with proposed logic - only open question was around Credit Options which members agreed to take away and revert on at the next peer review."
        rationale_author "DRR Peer Review Group - 17/11/21"
        rationale "Discussed at the DRR Peer Review call. No further input on logic for credit options:
		    - Call, in case of payer option type
		    - Put, in case of receiver option type"
	    rationale_author "DRR Peer Review Group - 19/01/22"
		provision "For foreign exchange options, the currency in which the Call amount is denominated."]
    CDECallCurrency as "37 Call currency"

reporting rule PutAmount <"Put Amount">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "38" field "Put Amount"
        rationale "Discussed at Peer Review. Group largely in agreement with proposed logic - only open question was around Credit Options which members agreed to take away and revert on at the next peer review."
        rationale_author "DRR Peer Review Group - 17/11/21"
        rationale "Discussed at the DRR Peer Review call. No further input on logic for credit options:
		    - Call, in case of payer option type
		    - Put, in case of receiver option type"
	    rationale_author "DRR Peer Review Group - 19/01/22"
		provision "For foreign exchange options, the monetary amount that the option gives the right to sell."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "38" field "Put Amount" footnote "36"
        provision "DMO expects this data element and the corresponding currency data element for all asset classes."]
    CDEPutAmount as "38 Put Amount"

reporting rule PutCurrency <"Put Currency">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "39" field "Put Currency"
        rationale "Discussed at Peer Review. Group largely in agreement with proposed logic - only open question was around Credit Options which members agreed to take away and revert on at the next peer review."
        rationale_author "DRR Peer Review Group - 17/11/21"
        rationale "Discussed at the DRR Peer Review call. No further input on logic for credit options:
		    - Call, in case of payer option type
		    - Put, in case of receiver option type"
	    rationale_author "DRR Peer Review Group - 19/01/22"
		provision "For foreign exchange options, the currency in which the Put amount is denominated."]
    CDEPutCurrency as "39 Put currency"

reporting rule NotionalQuantityLeg1 <"Notional Quantity Leg 1">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "40" field "Notional Quantity"
        provision "For each leg of the swap transaction, where applicable, for swap transactions negotiated in non-monetary amounts with fixed notional quantity for each schedule period (i.e., 50 barrels per month).
                   The frequency is reported in Quantity frequency and the unit of measure is reported in Quantity unit of measure."]
    extract TradeForEvent( ReportableEvent )
    then extract
        if IsCommodity(ProductForTrade(Trade)) then
            CommodityObservablePriceQuantity(Trade->tradableProduct->tradeLot only-element , CommodityLeg1(ProductForTrade(Trade)))
        else if Qualify_Commodity_Option(ProductForTrade(Trade) -> contractualProduct -> economicTerms) then
            Trade -> tradableProduct -> tradeLot -> priceQuantity
        else
            empty
    then extract PriceQuantity -> quantity
        filter [ item -> frequency exists ]
        map [ item -> amount ]
    as "40 Notional quantity-Leg 1"

reporting rule NotionalQuantityLeg2 <"Notional Quantity Leg 2">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "40" field "Notional Quantity"
        provision "For each leg of the swap transaction, where applicable, for swap transactions negotiated in non-monetary amounts with fixed notional quantity for each schedule period (i.e., 50 barrels per month).
                   The frequency is reported in Quantity frequency and the unit of measure is reported in Quantity unit of measure."]
    extract TradeForEvent( ReportableEvent )
    then extract
        if Qualify_Commodity_Swap_Basis(ProductForTrade(Trade) -> contractualProduct -> economicTerms) then 
            CommodityObservablePriceQuantity( Trade -> tradableProduct -> tradeLot only-element, CommodityLeg2( ProductForTrade( Trade ) ) )
        else if Qualify_Commodity_Swap_FixedFloat( ProductForTrade(Trade) -> contractualProduct -> economicTerms ) then
            Trade -> tradableProduct -> tradeLot -> priceQuantity
                filter [ item -> observable is absent ]
        else
            empty
    then extract PriceQuantity -> quantity
        filter [ item -> frequency exists ]
        map [ item -> amount ]
    as "40 Notional quantity-Leg 2"

reporting rule QuantityFrequencyLeg1 <"Quantity Frequency Leg 1">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "41" field "Quantity Frequency"
        rationale "ONDE use case not supported. It was only found on physical commodities and they are out of scope for CFTC reporting."
        rationale_author "DRR - 07/06/2022"
        rationale "The code ADHO is not supported by firms."
        rationale_author "Peer Review WG - 2/2/2022"
        provision "The rate at which the quantity is quoted on the swap transaction. e.g., hourly, daily, weekly, monthly"]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "41" field "Quantity Frequency" footnote "37"
        provision "To represent quarterly, report [Quantity frequency] = 'MNTH' and [Quantity frequency multiplier] = '3'. For semi-annual, report [Quantity frequency] = 'MNTH' and [Quantity frequency multiplier] = '6'."]
    extract TradeForEvent( ReportableEvent ) then 
    extract 
        if IsCommodity(ProductForTrade(Trade)) then
            QuantityFrequency(CommodityLeg1(ProductForTrade(Trade))->calculationPeriodDates, CommodityObservablePriceQuantity(Trade->tradableProduct->tradeLot only-element , CommodityLeg1(ProductForTrade(Trade)))) 
        else if Qualify_Commodity_Option(ProductForTrade(Trade)->contractualProduct->economicTerms) then 
            QuantityFrequency(ProductForTrade(Trade) -> contractualProduct -> economicTerms -> payout -> optionPayout -> observationTerms -> calculationPeriodDates only-element , Trade -> tradableProduct -> tradeLot -> priceQuantity only-element)
    as "41 Quantity frequency-Leg 1"
    

reporting rule QuantityFrequencyLeg2 <"Quantity Frequency Leg 2">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "41" field "Quantity Frequency"
        rationale "ONDE use case not supported. It was only found on physical commodities and they are out of scope for CFTC reporting."
        rationale_author "DRR - 07/06/2022"
        rationale "The code ADHO is not supported by firms."
        rationale_author "Peer Review WG - 2/2/2022"
        provision "The rate at which the quantity is quoted on the swap transaction. e.g., hourly, daily, weekly, monthly"]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "41" field "Quantity Frequency" footnote "37"
        provision "To represent quarterly, report [Quantity frequency] = 'MNTH' and [Quantity frequency multiplier] = '3'. For semi-annual, report [Quantity frequency] = 'MNTH' and [Quantity frequency multiplier] = '6'."]
    extract TradeForEvent( ReportableEvent ) then 
    extract
        if Qualify_Commodity_Swap_Basis(ProductForTrade(Trade) -> contractualProduct -> economicTerms) then
            QuantityFrequency(CommodityLeg2(ProductForTrade(Trade))->calculationPeriodDates, CommodityObservablePriceQuantity(Trade->tradableProduct->tradeLot only-element , CommodityLeg2(ProductForTrade(Trade)))) 
        else if Qualify_Commodity_Swap_FixedFloat(ProductForTrade(Trade) -> contractualProduct -> economicTerms) then
            QuantityFrequency(CommodityLeg1(ProductForTrade(Trade))->calculationPeriodDates,CommodityFixedPriceQuantity(Trade->tradableProduct->tradeLot only-element)) 
    as "41 Quantity frequency-Leg 2"

reporting rule QuantityFrequencyMultiplierLeg1 <"Quantity Frequency Multiplier Leg 1">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "42" field "Quantity Frequency Multiplier"
        provision "The number of time units for the Quantity frequency"]
    extract TradeForEvent( ReportableEvent ) then extract 
        if IsCommodity(ProductForTrade(Trade)) then CommodityObservablePriceQuantity(Trade->tradableProduct->tradeLot only-element , CommodityLeg1(ProductForTrade(Trade)))
        else if Qualify_Commodity_Option(ProductForTrade(Trade)->contractualProduct->economicTerms) then Trade -> tradableProduct -> tradeLot -> priceQuantity
        then extract PriceQuantity -> quantity -> frequency -> periodMultiplier as "42 Quantity frequency multiplier-Leg 1"
    
reporting rule QuantityFrequencyMultiplierLeg2 <"Quantity Frequency Multiplier Leg 2">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "42" field "Quantity Frequency Multiplier"
        provision "The number of time units for the Quantity frequency"]
        extract TradeForEvent( ReportableEvent ) then extract
            if Qualify_Commodity_Swap_Basis(ProductForTrade(Trade) -> contractualProduct -> economicTerms) then CommodityObservablePriceQuantity(Trade->tradableProduct->tradeLot only-element , CommodityLeg2(ProductForTrade(Trade)))
            else if Qualify_Commodity_Swap_FixedFloat(ProductForTrade(Trade) -> contractualProduct -> economicTerms) then
                CommodityFixedPriceQuantity(Trade->tradableProduct->tradeLot only-element)
        then extract PriceQuantity -> quantity -> frequency -> periodMultiplier as "42 Quantity frequency multiplier-Leg 2"

reporting rule QuantityUnitOfMeasureLeg1 <"Quantity Unit Of Measure Leg 1">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "43" field "Quantity Unit Of Measure"
        provision "For each leg of the transaction, where applicable: unit of measure in which the Total notional quantity and Notional quantity are expressed."]
        extract TradeForEvent( ReportableEvent ) then extract
            /*filter when IsEquitySwap( Trade ) then 
                //extract Trade->tradableProduct->product->contractualProduct->economicTerms->payout->equityPayout->priceQuantity
                //TH -> eq2perf update proposal
                extract Trade->tradableProduct->product->contractualProduct->economicTerms->payout->performancePayout->priceQuantity*/
                //,
                    if IsCommodity( Trade -> tradableProduct -> product ) then
                    CommodityObservablePriceQuantity(Trade->tradableProduct->tradeLot only-element , CommodityLeg1(ProductForTrade(Trade))) -> quantity
                    else if IsCommodityOption( Trade -> tradableProduct -> product ) then Trade -> tradableProduct -> tradeLot -> priceQuantity -> quantity
                    else if IsEquityOption( ProductForTrade(Trade) ) then Trade -> tradableProduct -> tradeLot -> priceQuantity -> quantity
                        filter [item -> unitOfAmount -> financialUnit exists and item -> unitOfAmount -> financialUnit <> FinancialUnitEnum -> Contract] only-element
                then CDEQuantityUnitOfMeasure
        as "43 Quantity unit of measure-Leg 1"

reporting rule QuantityUnitOfMeasureLeg2 <"Quantity Unit Of Measure Leg 2">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "43" field "Quantity Unit Of Measure"
        provision "For each leg of the transaction, where applicable: unit of measure in which the Total notional quantity and Notional quantity are expressed."]
        extract TradeForEvent( ReportableEvent ) then extract
                if Qualify_Commodity_Swap_Basis(ProductForTrade(Trade) -> contractualProduct -> economicTerms) then CommodityObservablePriceQuantity(Trade->tradableProduct->tradeLot only-element , CommodityLeg2(ProductForTrade(Trade))) -> quantity
                else if Qualify_Commodity_Swap_FixedFloat(ProductForTrade(Trade) -> contractualProduct -> economicTerms) then CommodityFixedPriceQuantity(Trade->tradableProduct->tradeLot only-element) -> quantity
                /*filter when IsEquitySwap( Trade ) then
                    extract ProductForTrade( Trade )  then
                    extract InterestRateLeg2( Product ) then
                    extract InterestRatePayout -> priceQuantity
                ,
                extract ProductForTrade( Trade )  then
                (
                    filter when IsCommodity( Product ) then
                    (
                        extract CommodityLeg2( Product ) then extract CommodityPayout->priceQuantity,
                        extract FixedPriceLeg2( Product ) then extract FixedPricePayout->priceQuantity,
                        extract InterestRateLeg2( Product ) then extract InterestRatePayout->priceQuantity
                    )
                )*/
            then CDEQuantityUnitOfMeasure
                as "43 Quantity unit of measure-Leg 2"

reporting rule TotalNotionalQuantityLeg1 <"Total Notional Quantity Leg 1">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "44" field "Total Notional Quantity"
        provision "For each leg of the transaction, where applicable: aggregate Notional quantity of the underlying asset for the term of the transaction. 
                   Where the Total notional quantity is not known when a new transaction is reported, the Total notional quantity is updated as it becomes available."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "44" field "Total Notional Quantity" footnote "39"
        provision "'99999999999999999999.99999' is accepted when the value is not available. 25 numerical characters including decimals."]
    extract TradeForEvent( ReportableEvent ) then
            extract if IsEquity (ProductForTrade(Trade)) = True then CDEEquityTotalNotionalQuantity ( Trade )
                else if Qualify_Commodity_Option( ProductForTrade(Trade) -> contractualProduct -> economicTerms) then 
                    ProductForTrade(Trade) -> contractualProduct -> economicTerms -> payout -> optionPayout -> priceQuantity -> quantitySchedule -> amount only-element
                else if IsCommodity ( ProductForTrade(Trade) ) = True then
                    CDECommodityTotalNotionalQuantity ( CommodityLeg1 ( ProductForTrade(Trade) ) )
        as "44 Total notional quantity-Leg 1"

reporting rule TotalNotionalQuantityLeg2 <"Total Notional Quantity Leg 2">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "44" field "Total Notional Quantity"
        provision "For each leg of the transaction, where applicable: aggregate Notional quantity of the underlying asset for the term of the transaction.
				   Where the Total notional quantity is not known when a new transaction is reported, the Total notional quantity is updated as it becomes available."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "44" field "Total Notional Quantity" footnote "39"
        provision "'99999999999999999999.99999' is accepted when the value is not available. 25 numerical characters including decimals."]
    extract TradeForEvent( ReportableEvent ) then
        extract ProductForTrade( Trade )  then
            extract if IsCommodityCommodity(Product) then
                CDECommodityTotalNotionalQuantity ( CommodityLeg2( Product ) )
            else if IsCommodity (Product) = True then
                CDEFixedPriceTotalNotionalQuantity ( FixedPriceLeg2( Product ) )
    as "44 Total notional quantity-Leg 2"

reporting rule PackageIndicator <"Package Indicator">
    [regulatoryReference  CFTC Part45 appendix "1" dataElement"45" field "Package Indicator"
        provision "Indicator of whether the swap transaction is part of a package transaction."]
    extract 
        ReportableEvent -> originatingWorkflowStep -> businessEvent -> packageInformation exists or ReportableEvent -> originatingWorkflowStep -> businessEvent ->  after -> trade -> executionDetails -> packageReference exists
        as "45 Package Indicator"

reporting rule PackageIdentifier <"Package Identifier">
    [regulatoryReference  CFTC Part45 appendix "1" dataElement"46" field "Package Identifier"
        provision "Identifier (determined by the reporting counterparty) in order to connect two or more transactions that are reported separately by the reporting counterparty, but that are negotiated together as the product of a single economic agreement. Two or more reports pertaining to the same transaction whenever jurisdictional reporting requirement does not allow the transaction to be reported with a single report to TRs. A package may include reportable and non-reportable transactions. This data element is not applicable  if no package is involved, or  to allocations. Where the Package identifier is not known when a new transaction is reported, the Package identifier is updated as it becomes available."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "46" field "Package Identifier" footnote "40"
        provision "To report a collar, this field should be populated to link the cap and floor legs. To report a straddle, this field should be populated to link the payer swaption and receiver swaption legs."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "46" field "Package Identifier" footnote "41"
        provision "In addition, a 'package transaction' also includes a transaction involving two or more instruments: (1) that is executed between two or more counterparties; (2) that is priced or quoted as one economic transaction with
            simultaneous or near simultaneous execution of all components; (3) where the execution of each component is contingent upon the execution of all other components; (4) where each component is assigned a Unique Swap Identifier (USI) or Unique Transaction Identifier (UTI); and (5) each component is reported separately."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "46" field "Package Identifier" footnote "42"
        provision "'UNKNOWN' is accepted when the value is not available."]
    filter when rule PackageIndicator then CDEPackageIdentifier 
        as "46 Package Identifier"

reporting rule PackageTransactionPrice <"Package Transaction Price">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"47" field "Package Transaction Price"
        provision "Fields 47-49 repeatable in case of packages"]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "47" field "Package Transaction Price" footnote "43"
        provision "The allowable values are restricted based on CFTCs jurisdictional requirements."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "47" field "Package Transaction Price" footnote "44"
        provision "Default value with all 9s, for any of the allowable formats, is accepted when the value is unknown. When [Package transaction price notation] = '1' use '99999.9999999999999' (18 numerical characters including 13 decimal
            places). When [Package transaction price notation] = '3' use '9.9999999999' (11 numerical characters including 10 decimal places)."]
    filter when rule PackageIndicator then
        extract ReportableEvent -> originatingWorkflowStep -> businessEvent then
            extract repeatable BusinessEvent -> after -> trade then
            (
                PackageTransactionPriceAmount,
                PackageTransactionPriceCurrency,
                PackageTransactionPriceNotation
            )
        
reporting rule PackageTransactionPriceAmount <"Package Transaction Price Amount">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "47" field "Package Transaction Price Amount"
        provision "Traded price of the entire package in which the reported derivative transaction is a component. This data element is not applicable if no package is involved, or package transaction spread is used. Prices and related data elements of the transactions (Price currency, Price notation, Price unit of measure) that represent individual components of the package are reported when available. The Package transaction price may not be known when a new transaction is reported but may be updated later."]
    CDEPackagePrice
        as "47/49-$ 47 Package Transaction Price Amount"

reporting rule PackageTransactionPriceCurrency <"Package Transaction Price Currency">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"48" field "Package Transaction Price Currency"
        provision "Currency in which the Package transaction price is denominated. This data element is not applicable if no package is involved, or package transaction spread is used, or package transaction price notation = 3"]    
    CDEPackagePriceCurrency
        as "47/49-$ 48 Package Transaction Price Currency"

reporting rule PackageTransactionPriceNotation <"Package Transaction Price Notation">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"49" field "Package Transaction Price Notation"
        provision "Manner in which the Package transaction price is expressed. This data element is not applicable if no package is involved, or package transaction spread is used"]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "49" field "Package Transaction Price Notation" footnote "45"
        provision "The allowable values are restricted based on CFTCs jurisdictional requirements."]
    CDEPackagePriceNotation
        as "47/49-$ 49 Package Transaction Price Notation"

reporting rule PackageTransactionSpreadLeg1 <"Package Transaction Spread">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"50" field "Package Transaction Spread"
        provision "Traded price of the entire package in which the reported derivative transaction is a component of a package transaction. Package transaction price when the price of the package is expressed as a spread, difference between two reference prices. This data element is not applicable if no package is involved, or Package transaction price is used. Spread and related data elements of the transactions (spread currency, Spread notation) that represent individual components of the package are reported when available. Package transaction spread may not be known when a new transaction is reported but may be updated later."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "50" field "Package Transaction Spread" footnote "47"
        provision "The allowable values are restricted based on CFTCs jurisdictional requirements."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "50" field "Package Transaction Spread" footnote "46"
        provision "46 Default value with all 9s, for any of the allowable formats, is accepted when the value is unknown. When [Package transaction price notation] = '1' use '99999.9999999999999' (18 numerical characters including 13 decimal
            places). When [Package transaction price notation] = '3' use '9.9999999999' (11 numerical characters including 10 decimal places. When [Package transaction spread notation] = '4' use '99999' (5 numerical characters with no
            decimal place)."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "52" field "Package Transaction Spread Notation" footnote "48"
        provision "The allowable values are restricted based on CFTCs jurisdictional requirements."]
    filter when rule PackageIndicator then
    extract ReportableEvent -> originatingWorkflowStep -> businessEvent then
        extract repeatable BusinessEvent -> after -> trade then
            extract ProductForTrade( Trade )  then
            (
                (
                    filter when IsSwaption( Product ) then
                        extract UnderlierForProduct( Product ) then extract InterestRateLeg1( Product ),
                    extract InterestRateLeg1( Product )
                ) then extract CDESpread_InterestRate(InterestRatePayout) ,
                extract CommodityLeg1( Product ) then extract CDESpread_Commodity( CommodityPayout )
            ) then
            (
                PackageTransactionSpreadLeg1Amount,
                PackageTransactionSpreadLeg1Currency,
                PackageTransactionSpreadLeg1Notation
            )

reporting rule PackageTransactionSpreadLeg1Amount 
    CDEPackageSpread 
    as "50/52-$ 50 Package Transaction Spread Amount-Leg1"

reporting rule PackageTransactionSpreadLeg1Currency 
    CDEPackageSpreadCurrency
    as "50/52-$ 51 Package Transaction Spread Currency-Leg1"

reporting rule PackageTransactionSpreadLeg1Notation 
    CDEPackageSpreadNotation 
    as "50/52-$ 52 Package Transaction Spread Notation-Leg1"

reporting rule PackageTransactionSpreadLeg2 <"Package Transaction Spread">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"50" field "Package Transaction Spread"
        provision "Traded price of the entire package in which the reported derivative transaction is a component of a package transaction. Package transaction price when the price of the package is expressed as a spread, difference between two reference prices. This data element is not applicable if no package is involved, or Package transaction price is used. Spread and related data elements of the transactions (spread currency, Spread notation) that represent individual components of the package are reported when available. Package transaction spread may not be known when a new transaction is reported but may be updated later."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "50" field "Package Transaction Spread" footnote "47"
        provision "The allowable values are restricted based on CFTCs jurisdictional requirements."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "50" field "Package Transaction Spread" footnote "46"
        provision "46 Default value with all 9s, for any of the allowable formats, is accepted when the value is unknown. When [Package transaction price notation] = '1' use '99999.9999999999999' (18 numerical characters including 13 decimal
            places). When [Package transaction price notation] = '3' use '9.9999999999' (11 numerical characters including 10 decimal places. When [Package transaction spread notation] = '4' use '99999' (5 numerical characters with no
            decimal place)."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "52" field "Package Transaction Spread Notation" footnote "48"
        provision "The allowable values are restricted based on CFTCs jurisdictional requirements."]

    filter when rule PackageIndicator then
    extract ReportableEvent -> originatingWorkflowStep -> businessEvent then
        extract repeatable BusinessEvent -> after -> trade then
            extract ProductForTrade( Trade )  then
            (
                (
                    filter when IsSwaption( Product ) then
                        extract UnderlierForProduct( Product ) then extract InterestRateLeg2( Product ),
                    extract InterestRateLeg2( Product )
                ) then extract CDESpread_InterestRate ( InterestRatePayout ),
                extract CommodityLeg2( Product ) then extract CDESpread_Commodity( CommodityPayout )
            ) then

            (
                PackageTransactionSpreadLeg2Amount,
                PackageTransactionSpreadLeg2Currency,
                PackageTransactionSpreadLeg2Notation
            )

reporting rule PackageTransactionSpreadLeg2Amount 
    CDEPackageSpread 
    as "50/52-$ 50 Package Transaction Spread Amount-Leg2"

reporting rule PackageTransactionSpreadLeg2Currency 
    CDEPackageSpreadCurrency
    as "50/52-$ 51 Package Transaction Spread Currency-Leg2"

reporting rule PackageTransactionSpreadLeg2Notation 
    CDEPackageSpreadNotation 
    as "50/52-$ 52 Package Transaction Spread Notation-Leg2"

reporting rule FixedRateDayCountConventionLeg1 <"Fixed rate day count convention-leg 1">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "53" field "Fixed rate day count convention-leg 1"
        rationale "fixed income/fixed rates not applied to FX products"
        rationale_author "DRR Peer Review Group - 23/11/21"
        provision "For each leg of the transaction, where applicable: day count convention (often also referred to as day count fraction or day count basis or day count method) that determines how interest payments are calculated. It is used to compute the year fraction of the calculation period, and indicates the number of days in the calculation period divided by the number of days in the year."]
	extract TradeForEvent( ReportableEvent ) then
        extract ProductForTrade( Trade ) then
            (
                filter when IsSwaption( Product ) then
                    extract UnderlierForProduct( Product ) then extract InterestRateLeg1( Product ),
                extract InterestRateLeg1( Product )
            ) 
            then filter when InterestRatePayout -> rateSpecification -> fixedRate exists then
				CDEDayCountConvention
    	    as "53 Fixed rate day count convention-Leg 1"

reporting rule FixedRateDayCountConventionLeg2 <"Fixed rate day count convention-leg 2">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "53" field "Fixed rate day count convention-leg 2"
        rationale "fixed income/fixed rates not applied to FX products"
        rationale_author "DRR Peer Review Group - 23/11/21"
        provision "For each leg of the transaction, where applicable: day count convention (often also referred to as day count fraction or day count basis or day count method) that determines how interest payments are calculated. It is used to compute the year fraction of the calculation period, and indicates the number of days in the calculation period divided by the number of days in the year."]
	extract TradeForEvent( ReportableEvent ) then
            extract ProductForTrade( Trade )  then
            (
                filter when IsSwaption( Product ) then
                    extract UnderlierForProduct( Product ) then extract InterestRateLeg2( Product ),
                filter when IsCreditSwaption( Product ) then
                    extract UnderlierForProduct( Product ) then extract InterestRateLeg2( Product ),
                extract InterestRateLeg2( Product )
            ) then filter when InterestRatePayout -> rateSpecification -> fixedRate exists then
				CDEDayCountConvention
    	    as "53 Fixed rate day count convention-Leg 2"

reporting rule FloatingRateDayCountConventionLeg1 <"Floating rate day count convention-leg 1">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "53" field "Floating rate day count convention-leg 1"
        rationale "fixed income/fixed rates not applied to FX products"
        rationale_author "DRR Peer Review Group - 23/11/21"
        provision "For each leg of the transaction, where applicable: day count convention (often also referred to as day count fraction or day count basis or day count method) that determines how interest payments are calculated. It is used to compute the year fraction of the calculation period, and indicates the number of days in the calculation period divided by the number of days in the year."]
	extract TradeForEvent( ReportableEvent ) then
            extract ProductForTrade( Trade )  then
            (
                filter when IsSwaption( Product ) then
                    extract UnderlierForProduct( Product ) then extract InterestRateLeg1( Product ),
                extract InterestRateLeg1( Product )
            )
            then filter when InterestRatePayout -> rateSpecification -> floatingRate exists
                or InterestRatePayout -> rateSpecification -> inflationRate exists then
				    CDEDayCountConvention
    	    as "53 Floating rate day count convention-Leg 1"

reporting rule FloatingRateDayCountConventionLeg2 <"Floating rate day count convention-leg 2">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "53" field "Floating rate day count convention-leg 2"
        rationale "fixed income/fixed rates not applied to FX products"
        rationale_author "DRR Peer Review Group - 23/11/21"
        provision "For each leg of the transaction, where applicable: day count convention (often also referred to as day count fraction or day count basis or day count method) that determines how interest payments are calculated. It is used to compute the year fraction of the calculation period, and indicates the number of days in the calculation period divided by the number of days in the year."]
	extract TradeForEvent( ReportableEvent ) then
            extract ProductForTrade( Trade )  then
            (
                filter when IsSwaption( Product ) then
                    extract UnderlierForProduct( Product ) then extract InterestRateLeg2( Product ),
                filter when IsCreditSwaption( Product ) then
                    extract UnderlierForProduct( Product ) then extract InterestRateLeg2( Product ),
                extract InterestRateLeg2( Product )
            )
            then filter when InterestRatePayout -> rateSpecification -> floatingRate exists
                or InterestRatePayout -> rateSpecification -> inflationRate exists then
                    CDEDayCountConvention
            as "53 Floating rate day count convention-Leg 2"

reporting rule FixingDateLeg1 <"Fixing date-Leg 1">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "54" field "Fixing date - Leg 1"
		rationale "Only applies to fixing date of an exchange rate as per definition"
        rationale_author "DRR Peer Review Group - 23/11/21"
        provision "Describes the specific date when a non-deliverable forward as well as various types of FX OTC options such as cash-settled options that will 'fix' against a particular exchange rate, which will be used to compute the ultimate cash settlement"]
   //TH Review - pending to review conditions 
   extract TradeForEvent( ReportableEvent ) then extract ProductForTrade( Trade ) then extract
        // IR
        if InterestRateLeg1(Product) -> settlementTerms exists then InterestRateLeg1(Product) -> settlementTerms 
        // Option
        else if Product -> contractualProduct -> economicTerms -> payout -> optionPayout exists then Product -> contractualProduct -> economicTerms -> payout -> optionPayout only-element -> settlementTerms
        // Forward
        else if Product -> contractualProduct -> economicTerms -> payout -> forwardPayout exists then Product -> contractualProduct -> economicTerms -> payout -> forwardPayout only-element -> settlementTerms
    then extract SettlementTerms -> cashSettlementTerms only-element -> valuationDate -> fxFixingDate -> fxFixingDate -> adjustableDate -> unadjustedDate
    as "54 Fixing date-Leg 1"

reporting rule FixingDateLeg2 <"Fixing date-Leg 2">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "54" field "Fixing date - Leg 2"
		rationale "only applies to fixing date of an exchange rate as per definition"
        rationale_author "DRR Peer Review Group - 23/11/21"
        provision "Describes the specific date when a non-deliverable forward as well as various types of FX OTC options such as cash-settled options that will 'fix' against a particular exchange rate, which will be used to compute the ultimate cash settlement"]
    extract TradeForEvent( ReportableEvent ) then
        extract ProductForTrade( Trade )  then extract InterestRateLeg2( Product ) then extract InterestRatePayout -> settlementTerms
            then extract SettlementTerms -> cashSettlementTerms only-element -> valuationDate -> fxFixingDate -> fxFixingDate -> adjustableDate -> unadjustedDate
	as "54 Fixing date-Leg 2"

reporting rule FloatingRateResetFrequencyPeriodLeg1
	[regulatoryReference CFTC Part45 appendix "1" dataElement "55" field "Floating rate reset frequency period-leg 1"
   		rationale "fixed income/fixed rates not applied to FX products"
        rationale_author "DRR Peer Review Group - 23/11/21"
        provision "For each floating leg of the swap transaction, where applicable, time unit associated with the frequency of resets, e.g., day, week, month, year or term of the stream."]
	extract TradeForEvent( ReportableEvent )
        then extract ProductForTrade( Trade )  then extract
            if IsSwaption( Product ) then InterestRateLeg1( UnderlierForProduct( Product ) )
            else InterestRateLeg1( Product )
            then extract if InterestRatePayout -> rateSpecification -> floatingRate exists
                or InterestRatePayout -> rateSpecification -> inflationRate exists
			then ResetFrequencyPeriod( InterestRatePayout -> resetDates -> resetFrequency )
    as  "55 Floating rate reset frequency period-Leg 1"

reporting rule FloatingRateResetFrequencyPeriodLeg2
	[regulatoryReference CFTC Part45 appendix "1" dataElement "55" field "Floating rate reset frequency period-leg 2"
		rationale "fixed income/fixed rates not applied to FX products"
        rationale_author "DRR Peer Review Group - 23/11/21"
        provision "For each floating leg of the swap transaction, where applicable, time unit associated with the frequency of resets, e.g., day, week, month, year or term of the stream."]
	extract TradeForEvent( ReportableEvent )
        then extract ProductForTrade( Trade )  then extract
            if IsSwaption( Product ) or IsCreditSwaption( Product ) then  InterestRateLeg2( UnderlierForProduct( Product ) )
            else InterestRateLeg2( Product )
            then extract if InterestRatePayout -> rateSpecification -> floatingRate exists
                or InterestRatePayout -> rateSpecification -> inflationRate exists
            then ResetFrequencyPeriod( InterestRatePayout -> resetDates -> resetFrequency )
    as  "55 Floating rate reset frequency period-Leg 2"

reporting rule FloatingRateResetFrequencyPeriodMultiplierLeg1
	[regulatoryReference CFTC Part45 appendix "1" dataElement "56" field "Floating rate reset frequency period multiplier-leg 1"
		rationale "fixed income/fixed rates not applied to FX products"
        rationale_author "DRR Peer Review Group - 23/11/21"
        provision "For each floating leg of the swap transaction, where applicable, number of time units (as expressed by the Floating rate reset frequency period) that determines the frequency at which periodic payment dates for reset occur. For example, a transaction with reset payments occurring every two months is represented with a Floating rate reset frequency period of MNTH (monthly) and a Floating rate reset frequency period multiplier of 2. This data element is not applicable if the Floating rate reset frequency period is ADHO. If Floating rate reset frequency period is TERM, then the Floating rate reset frequency period multiplier is 1. If the reset frequency period is intraday, then the Floating rate reset frequency period is DAIL and the Floating rate reset frequency period multiplier is 0."]
	extract TradeForEvent( ReportableEvent )
        then extract ProductForTrade( Trade )  then extract 
            if IsSwaption( Product ) then InterestRateLeg1( UnderlierForProduct( Product ) )
            else InterestRateLeg1( Product )
            then extract if InterestRatePayout -> rateSpecification -> floatingRate exists
                or InterestRatePayout -> rateSpecification -> inflationRate exists
            then InterestRatePayout -> resetDates -> resetFrequency -> periodMultiplier
        as "56 Floating rate reset frequency period multiplier-Leg 1"

reporting rule FloatingRateResetFrequencyPeriodMultiplierLeg2
	[regulatoryReference CFTC Part45 appendix "1" dataElement "56" field "Floating rate reset frequency period multiplier-leg 2"
		rationale "fixed income/fixed rates not applied to FX products"
        rationale_author "DRR Peer Review Group - 23/11/21"
        provision "For each floating leg of the swap transaction, where applicable, number of time units (as expressed by the Floating rate reset frequency period) that determines the frequency at which periodic payment dates for reset occur. For example, a transaction with reset payments occurring every two months is represented with a Floating rate reset frequency period of MNTH (monthly) and a Floating rate reset frequency period multiplier of 2. This data element is not applicable if the Floating rate reset frequency period is ADHO. If Floating rate reset frequency period is TERM, then the Floating rate reset frequency period multiplier is 1. If the reset frequency period is intraday, then the Floating rate reset frequency period is DAIL and the Floating rate reset frequency period multiplier is 0."]
	extract TradeForEvent( ReportableEvent )
        then extract ProductForTrade( Trade )  then extract
            if IsSwaption( Product ) then InterestRateLeg2( UnderlierForProduct( Product ) )
            else if IsCreditSwaption( Product ) then InterestRateLeg2( UnderlierForProduct( Product )  )  
            else InterestRateLeg2( Product )       
            then extract if InterestRatePayout -> rateSpecification -> floatingRate exists
                or InterestRatePayout -> rateSpecification -> inflationRate exists
            then InterestRatePayout -> resetDates -> resetFrequency -> periodMultiplier
    as "56 Floating rate reset frequency period multiplier-Leg 2"

// TH proposal -> Other Payment fields with Transfer model
reporting rule OtherPayment <"Other Payment">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "57-62" field "Other Payment"
        rationale "Need to evaluate wether step-in / step-out novations should be included as part of any OtherPayment type"
        rationale_author "RBC - 31/03/22"
        provision "Fields 57-62 are repeatable"]
    extract TradeStateForEvent( ReportableEvent ) then
        extract repeatable TradeState -> transferHistory then
        (
            OtherPaymentType,
            OtherPaymentAmount,
            OtherPaymentCurrency,
            OtherPaymentDate,
            OtherPaymentPayer,
            OtherPaymentReceiver
        ) 
    
reporting rule OtherPaymentType <"Other Payment Type">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "57" field "Other Payment Type"
        rationale "For novation fees: US Working Group agreed that Example 01 Submission 03/04 indicate novation fee is not reported under the rewrite."
        rationale_author "US Compliance WG - 19/7/2022"
        rationale "For other fees, members expressed that the answer to this question is trade-dependent. After discussion, the WG concluded that each RCP must make its own determination whether other fees such as Amendment Fee, 
            Unclassified Fee, Termination Fee, etc. fit within the definition of one of the 3 Allowable Values of #57, as the RCP would be most familiar with the particular transaction and therefore the particular fee."
        rationale_author "US Compliance WG - 27/7/2022"
        provision "Type of Other payment amount. Option premium payment is not included as a payment type as premiums for option are reported using the option premium dedicated data element."]
        /*TH WIP -> Possible FeeTypeEnum not modelled in rule:
            Assignment <"A cash flow resulting from the assignment of a contract to a new counterparty.">
            Increase <"A cash flow associated with an increase lifecycle event.">
            Novation <"The novation fee.">
            Renegotiation <"A cash flow associated with a renegotiation lifecycle event.">
        */
        /*TH WIP -> Possible TransferTypeEnum not modelled in rule:
            BrokerageCommission <"The brokerage commission.">
            CorporateAction <"A cash flow corresponding to a corporate action event.">
            Coupon <"A cash flow corresponding to the periodic accrued interests.">
            CreditEvent <"A cashflow resulting from a credit event.">
            DividendReturn <"A cash flow corresponding to the synthetic dividend of an equity underlier asset traded through a derivative instrument.">
            Exercise <"A cash flow associated with an exercise lifecycle event.">
            Interest <"Interest, without qualification as to whether it a gross or net interest relates cashflow.">
            InterestReturn <"A cash flow corresponding to the return of the interest rate portion of a derivative instrument that has different types of underlying assets, such as a total return swap.">
            NetInterest <"Net interest across payout components. Applicable to products such as interest rate swaps.">
            Performance <"A cash flow corresponding to a performance return.  The settlementOrigin attribute on the Transfer should point to the relevant Payout defining the performance calculation.">    
        */
        extract TransferState -> transfer -> transferExpression then
            extract if TransferExpression -> priceTransfer = FeeTypeEnum -> Upfront then "UFRO"
                else if TransferExpression -> priceTransfer = FeeTypeEnum -> Termination 
                    or TransferExpression -> priceTransfer = FeeTypeEnum -> PartialTermination then "UWIN"
                else if TransferExpression -> scheduledTransfer -> transferType = TransferTypeEnum -> PrincipalPayment then "PEXH"
                //TH Review -> pre-release testing
                //else if TransferExpression -> priceTransfer = FeeTypeEnum -> Premium then "PREMIUM_TEST"
                //else "ToDo"
		as "57/62-$ 57 Other payment type"

reporting rule OtherPaymentAmount <"Other Payment Amount">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "58" field "Other Payment Amount"
        rationale "Need to evaluate wether step-in / step-out novations should be included as part of any OtherPayment type"
        rationale_author "RBC - 31/03/22"
		provision "Payment amounts with corresponding payment types to accommodate requirements of transaction descriptions from different asset classes."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "58" field "Other Payment Amount" footnote "49"
        provision "The set of data elements related to other payments (Other payment type [#57], Other payment amount [#58], Other payment currency [#59], Other payment date [#60], Other payment payer [#61], Other payment receiver
            [#62]) can be reported multiple times in the case of multiple payments."]
    filter when IsOtherPayment(TransferState) = True then CDEOtherPaymentAmount as "57/62-$ 58 Other payment amount"

reporting rule OtherPaymentCurrency <"Other Payment Currency">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "59" field "Other Payment Currency"
		rationale "Need to evaluate wether step-in / step-out novations should be included as part of any OtherPayment type"
        rationale_author "RBC - 31/03/22"
        provision "Currency in which Other payment amount is denominated."]
    filter when IsOtherPayment(TransferState) = True then CDEOtherPaymentCurrency as "57/62-$ 59 Other payment currency"

reporting rule OtherPaymentDate <"Other Payment Date">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "60" field "Other Payment Date"
		rationale "Need to evaluate wether step-in / step-out novations should be included as part of any OtherPayment type"
        rationale_author "RBC - 31/03/22"
        provision "Unadjusted date on which the Other payment amount is paid."]
    //TH Review -> settlementDate not present in CDM. Optional "paymentDate" in FpML 5.10 rk.
    /*TH Review -> Confirm the following:
        type=UFRO then map from "EffectiveDate"
        type=UWIN then map from "ExpirationDate"
        type=PEXH then extract from TransferState -> transfer -> settlementDate -> unadjustedDate
    */
    filter when IsOtherPayment(TransferState) = True then CDEOtherPaymentDate as "57/62-$ 60 Other payment date"

reporting rule OtherPaymentPayer <"Other Payment Payer">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "61" field "Other Payment Payer"
		rationale "Need to evaluate wether step-in / step-out novations should be included as part of any OtherPayment type"
        rationale_author "RBC - 31/03/22"
        provision "Identifier of the payer of Other payment amount."]
    filter when IsOtherPayment(TransferState) = True then CDEOtherPaymentPayer as "57/62-$ 61 Other payment payer"

reporting rule OtherPaymentReceiver <"Other Payment Receiver">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "62" field "Other Payment Receiver"
		rationale "Need to evaluate wether step-in / step-out novations should be included as part of any OtherPayment type"
        rationale_author "RBC - 31/03/22"
        provision "Identifier of the receiver of Other payment amount."]
    filter when IsOtherPayment(TransferState) = True then CDEOtherPaymentReceiver as "57/62-$ 62 Other payment receiver"

reporting rule FixedRatePaymentFrequencyPeriodLeg1
    [regulatoryReference CFTC Part45 appendix "1" dataElement "63" field "Payment Frequency Period"
        rationale "fixed income/fixed rates not applied to FX products"
        rationale_author "DRR Peer Review Group - 23/11/21"
        provision "For each leg of the transaction, where applicable: time unit associated with the frequency of payments, e.g., day, week, month, year or term of the stream."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "63" field "Payment Frequency Period" footnote "50"
        provision "To represent quarterly payment, report [Payment frequency period] = 'MNTH' and [Payment frequency period multiplier] = '3'. For semi-annual payment, report [Payment frequency period] = 'MNTH' and [Payment frequency
            period multiplier] = '6'."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "63" field "Payment Frequency Period" footnote "52"
        provision "Throughout this Technical Specification, for the allowable value 'EXPI' in frequency period related data elements, two different descriptions 'Payment at term' and 'End of term' are being used which in essence has the
            same meaning and represents the frequency/rate of payment/quantity."]
    extract TradeForEvent( ReportableEvent )
        then extract ProductForTrade( Trade )  then
            (
                filter when IsSwaption( Product ) then
                    extract UnderlierForProduct( Product ) then extract InterestRateLeg1( Product ),
                extract InterestRateLeg1( Product )
            ) then filter when InterestRatePayout -> rateSpecification -> fixedRate exists
                then CDEPaymentFrequencyPeriod
    as "63 Fixed rate payment frequency period-Leg 1"

reporting rule FixedRatePaymentFrequencyPeriodLeg2
    [regulatoryReference CFTC Part45 appendix "1" dataElement "63" field "Payment Frequency Period"
        rationale "fixed income/fixed rates not applied to FX products"
        rationale_author "DRR Peer Review Group - 23/11/21"
        provision "For each leg of the transaction, where applicable: time unit associated with the frequency of payments, e.g., day, week, month, year or term of the stream."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "63" field "Payment Frequency Period" footnote "50"
        provision "To represent quarterly payment, report [Payment frequency period] = 'MNTH' and [Payment frequency period multiplier] = '3'. For semi-annual payment, report [Payment frequency period] = 'MNTH' and [Payment frequency
            period multiplier] = '6'."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "63" field "Payment Frequency Period" footnote "52"
        provision "Throughout this Technical Specification, for the allowable value 'EXPI' in frequency period related data elements, two different descriptions 'Payment at term' and 'End of term' are being used which in essence has the
            same meaning and represents the frequency/rate of payment/quantity."]
    extract TradeForEvent( ReportableEvent )
        then extract ProductForTrade( Trade )  then
            (
                filter when IsSwaption( Product ) then
                    extract UnderlierForProduct( Product ) then extract InterestRateLeg2( Product ),
                filter when IsCreditSwaption( Product ) then
                    extract UnderlierForProduct( Product ) then extract InterestRateLeg2( Product ),
                extract InterestRateLeg2( Product )
            ) then filter when InterestRatePayout -> rateSpecification -> fixedRate exists
                then CDEPaymentFrequencyPeriod
    as "63 Fixed rate payment frequency period-Leg 2"

reporting rule FloatingRatePaymentFrequencyPeriodLeg1
    [regulatoryReference CFTC Part45 appendix "1" dataElement "63" field "Payment Frequency Period"
        rationale "fixed income/fixed rates not applied to FX products"
        rationale_author "DRR Peer Review Group - 23/11/21"
        provision "For each leg of the transaction, where applicable: time unit associated with the frequency of payments, e.g., day, week, month, year or term of the stream."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "63" field "Payment Frequency Period" footnote "50"
        provision "To represent quarterly payment, report [Payment frequency period] = 'MNTH' and [Payment frequency period multiplier] = '3'. For semi-annual payment, report [Payment frequency period] = 'MNTH' and [Payment frequency
            period multiplier] = '6'."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "63" field "Payment Frequency Period" footnote "52"
        provision "Throughout this Technical Specification, for the allowable value 'EXPI' in frequency period related data elements, two different descriptions 'Payment at term' and 'End of term' are being used which in essence has the
            same meaning and represents the frequency/rate of payment/quantity."]
    extract TradeForEvent( ReportableEvent )
        then extract ProductForTrade( Trade )  then
            (
                filter when IsSwaption( Product ) then
                    extract UnderlierForProduct( Product ) then extract InterestRateLeg1( Product ),
                extract InterestRateLeg1( Product )
            ) then filter when InterestRatePayout -> rateSpecification -> floatingRate exists or InterestRatePayout -> rateSpecification -> inflationRate exists
                then CDEPaymentFrequencyPeriod
        as "63 Floating rate payment frequency period-Leg 1"

reporting rule FloatingRatePaymentFrequencyPeriodLeg2
    [regulatoryReference CFTC Part45 appendix "1" dataElement "63" field "Payment Frequency Period"
        rationale "fixed income/fixed rates not applied to FX products"
        rationale_author "DRR Peer Review Group - 23/11/21"
        provision "For each leg of the transaction, where applicable: time unit associated with the frequency of payments, e.g., day, week, month, year or term of the stream."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "63" field "Payment Frequency Period" footnote "50"
        provision "To represent quarterly payment, report [Payment frequency period] = 'MNTH' and [Payment frequency period multiplier] = '3'. For semi-annual payment, report [Payment frequency period] = 'MNTH' and [Payment frequency
            period multiplier] = '6'."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "63" field "Payment Frequency Period" footnote "52"
        provision "Throughout this Technical Specification, for the allowable value 'EXPI' in frequency period related data elements, two different descriptions 'Payment at term' and 'End of term' are being used which in essence has the
            same meaning and represents the frequency/rate of payment/quantity."]
    extract TradeForEvent( ReportableEvent )
        then extract ProductForTrade( Trade )  then
            (
                filter when IsSwaption( Product ) then
                    extract UnderlierForProduct( Product ) then extract InterestRateLeg2( Product ),
                filter when IsCreditSwaption( Product ) then
                    extract UnderlierForProduct( Product ) then extract InterestRateLeg2( Product ),
                extract InterestRateLeg2( Product )
            ) then filter when InterestRatePayout -> rateSpecification -> floatingRate exists or InterestRatePayout -> rateSpecification -> inflationRate exists
                then CDEPaymentFrequencyPeriod
        as "63 Floating rate payment frequency period-Leg 2"

reporting rule FixedRatePaymentFrequencyPeriodMultiplierLeg1
    [regulatoryReference CFTC Part45 appendix "1" dataElement "64" field "Payment Frequency Period Multiplier"
        rationale "fixed income/fixed rates not applied to FX products"
        rationale_author "DRR Peer Review Group - 23/11/21"
        provision "For each leg of the transaction, where applicable: number of time units (as expressed by the Payment frequency period) that determines the frequency at which periodic payment dates occur. For example, a transaction with payments occurring every two months is represented with a Payment frequency period of MNTH (monthly) and a Payment frequency period multiplier of 2.This data element is not applicable if the Payment frequency period is ADHO. If Payment frequency period is TERM, then the Payment frequency period multiplier is 1. If the Payment frequency is intraday, then the Payment frequency period is DAIL and the Payment frequency multiplier is 0."]
    extract TradeForEvent( ReportableEvent )
        then extract ProductForTrade( Trade )  then
            (
                filter when IsSwaption( Product ) then
                    extract UnderlierForProduct( Product ) then extract InterestRateLeg1( Product ),
                extract InterestRateLeg1( Product )
            ) then filter when InterestRatePayout -> rateSpecification -> fixedRate exists
                then CDEPaymentFrequencyPeriodMultiplier
    as "64 Fixed rate payment frequency period multiplier-Leg 1"

reporting rule FixedRatePaymentFrequencyPeriodMultiplierLeg2
    [regulatoryReference CFTC Part45 appendix "1" dataElement "64" field "Payment Frequency Period Multiplier"
        rationale "fixed income/fixed rates not applied to FX products"
        rationale_author "DRR Peer Review Group - 23/11/21"
        provision "For each leg of the transaction, where applicable: number of time units (as expressed by the Payment frequency period) that determines the frequency at which periodic payment dates occur. For example, a transaction with payments occurring every two months is represented with a Payment frequency period of MNTH (monthly) and a Payment frequency period multiplier of 2.This data element is not applicable if the Payment frequency period is ADHO. If Payment frequency period is TERM, then the Payment frequency period multiplier is 1. If the Payment frequency is intraday, then the Payment frequency period is DAIL and the Payment frequency multiplier is 0."]
    extract TradeForEvent( ReportableEvent )
        then extract ProductForTrade( Trade )  then
            (
                filter when IsSwaption( Product ) then
                    extract UnderlierForProduct( Product ) then extract InterestRateLeg2( Product ),
                filter when IsCreditSwaption( Product ) then
                    extract UnderlierForProduct( Product ) then extract InterestRateLeg2( Product ),
                extract InterestRateLeg2( Product )
            ) then filter when InterestRatePayout -> rateSpecification -> fixedRate exists
                then CDEPaymentFrequencyPeriodMultiplier
    as "64 Fixed rate payment frequency period multiplier-Leg 2"

reporting rule FloatingRatePaymentFrequencyPeriodMultiplierLeg1
    [regulatoryReference CFTC Part45 appendix "1" dataElement "64" field "Payment Frequency Period Multiplier"
        rationale "fixed income/fixed rates not applied to FX products"
        rationale_author "DRR Peer Review Group - 23/11/21"
        provision "For each leg of the transaction, where applicable: number of time units (as expressed by the Payment frequency period) that determines the frequency at which periodic payment dates occur. For example, a transaction with payments occurring every two months is represented with a Payment frequency period of MNTH (monthly) and a Payment frequency period multiplier of 2.This data element is not applicable if the Payment frequency period is ADHO. If Payment frequency period is TERM, then the Payment frequency period multiplier is 1. If the Payment frequency is intraday, then the Payment frequency period is DAIL and the Payment frequency multiplier is 0."]
    extract TradeForEvent( ReportableEvent )
        then extract ProductForTrade( Trade )  then
            (
                filter when IsSwaption( Product ) then
                    extract UnderlierForProduct( Product ) then extract InterestRateLeg1( Product ),
                extract InterestRateLeg1( Product )
            ) then filter when InterestRatePayout -> rateSpecification -> floatingRate exists or InterestRatePayout -> rateSpecification -> inflationRate exists
                then CDEPaymentFrequencyPeriodMultiplier
    as "64 Floating rate payment frequency period multiplier-Leg 1"

reporting rule FloatingRatePaymentFrequencyPeriodMultiplierLeg2
    [regulatoryReference CFTC Part45 appendix "1" dataElement "64" field "Payment Frequency Period Multiplier"
        rationale "fixed income/fixed rates not applied to FX products"
        rationale_author "DRR Peer Review Group - 23/11/21"
        provision "For each leg of the transaction, where applicable: number of time units (as expressed by the Payment frequency period) that determines the frequency at which periodic payment dates occur. For example, a transaction with payments occurring every two months is represented with a Payment frequency period of MNTH (monthly) and a Payment frequency period multiplier of 2.This data element is not applicable if the Payment frequency period is ADHO. If Payment frequency period is TERM, then the Payment frequency period multiplier is 1. If the Payment frequency is intraday, then the Payment frequency period is DAIL and the Payment frequency multiplier is 0."]
    extract TradeForEvent( ReportableEvent )
        then extract ProductForTrade( Trade )  then
            (
                filter when IsSwaption( Product ) then
                    extract UnderlierForProduct( Product ) then extract InterestRateLeg2( Product ),
                filter when IsCreditSwaption( Product ) then
                    extract UnderlierForProduct( Product ) then extract InterestRateLeg2( Product ),
                extract InterestRateLeg2( Product )
            ) then filter when InterestRatePayout -> rateSpecification -> floatingRate exists or InterestRatePayout -> rateSpecification -> inflationRate exists
                then CDEPaymentFrequencyPeriodMultiplier
    as "64 Floating rate payment frequency period multiplier-Leg 2"

reporting rule ExchangeRateLeg1 <"Exchange Rate Leg 1">
   	[regulatoryReference CFTC Part45 appendix "1" dataElement "65" field "Exchange Rate-Leg 1"
   		provision "Exchange rate between the two different currencies specified in the OTC derivative transaction agreed by the counterparties at the inception of the transaction, expressed as the rate of exchange from converting the unit currency into the quoted currency. In the example 0.9426 USD/EUR, USD is the unit currency and EUR is the quoted currency; USD 1 = EUR 0.9426."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "65" field "Exchange Rate-Leg 1" footnote "53"
        provision "For FX, forward exchange rate would be reported in this data element."]
	CDEExchangeRate then
		extract PriceSchedule -> amount
    as "65 Exchange rate-Leg 1"
	//TH review -> Logic to be added where a product has two Exchange Rates, i.e. Exchange Rate Leg 1 and Exchange Rate Leg 2.

reporting rule ExchangeRateBasis <"Exchange Rate Basis">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "66" field "Exchange Rate Basis"
        provision "Currency pair and order in which the exchange rate is denominated, expressed as unit currency/quoted currency. In the example 0.9426 USD/EUR, USD is the unit currency and EUR is the quoted currency, USD 1 = EUR 0.9426."]
		CDEExchangeRate then CDEExchangeRateBasis
        as "66 Exchange rate basis"

reporting rule FixedRateLeg1
    [regulatoryReference CFTC Part45 appendix "1" dataElement "67" field "Fixed Rate 1"
        //rationale "For Zero Coupon Swaps the ISDA EMIR Data and Reporting Working Group agreed to report Fixed Rate with a value of 0 and the bullet payment would correspond to the Price."
        //rationale_author "DRR - 30/03/22"
        provision "For each leg of the transaction, where applicable: for OTC derivative transactions with periodic payments, per annum rate of the fixed leg(s)."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "67" field "Fixed Rate 1" footnote "54"
        provision "The allowable values are restricted based on CFTCs jurisdictional requirements."]
    /*extract TradeForEvent( ReportableEvent ) then extract ProductForTrade( Trade ) then
    (
        filter when IsFixedFloatZeroCouponSwap ( Product ) then return 0 as "67 Fixed rate-Leg 1",
        filter when IsNotFixedFloatZeroCouponSwap ( Product) then extract InterestRateLeg1( Product ) then CDEInterestRateFixedRate as "67 Fixed rate-Leg 1"
    )*/
    extract TradeForEvent( ReportableEvent ) then extract ProductForTrade( Trade ) then extract CDEInterestRateFixedRate( InterestRateLeg1( Product ) ) as "67 Fixed rate-Leg 1"

reporting rule FixedRateLeg2
    [regulatoryReference CFTC Part45 appendix "1" dataElement "67" field "Fixed Rate 2"
        //rationale "For Zero Coupon Swaps the ISDA EMIR Data and Reporting Working Group agreed to report Fixed Rate with a value of 0 and the bullet payment would correspond to the Price."
        //rationale_author "DRR - 30/03/22"
        provision "For each leg of the transaction, where applicable: for OTC derivative transactions with periodic payments, per annum rate of the fixed leg(s)."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "67" field "Fixed Rate 2" footnote "54"
        provision "The allowable values are restricted based on CFTCs jurisdictional requirements."]
    extract TradeForEvent( ReportableEvent ) then extract ProductForTrade( Trade ) then extract
    /*filter when IsFixedFloatZeroCouponSwap ( Product ) then return 0 as "67 Fixed rate-Leg 2",
        filter when IsNotFixedFloatZeroCouponSwap ( Product) then extract InterestRateLeg2 ( Product ) then CDEInterestRateFixedRate as "67 Fixed rate-Leg 2",*/
    //TH Review - pending to review conditions 
        if Qualify_AssetClass_InterestRate_Swap( Product -> contractualProduct -> economicTerms ) = True or Qualify_AssetClass_CreditDefault( Product -> contractualProduct -> economicTerms ) = True then 
            CDEInterestRateFixedRate(InterestRateLeg2( Product ))
        else if Qualify_Commodity_Swap_FixedFloat( Product -> contractualProduct -> economicTerms ) = False then CDEFixedPriceFixedRate( FixedPriceLeg2( Product ) ) 
    as "67 Fixed rate-Leg 2"

reporting rule PostPricedSwapIndicator <"Post-priced swap indicator">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "68" field "Post-priced Swap Indicator"
		provision "Indicator of whether the swap transaction satisfies the definition of 'post-priced swap' in  43.2(a) of the Commission's regulations."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "68" field "Post-priced Swap Indicator" footnote "55"
        	provision "For transactions where the swap price is not known at the time to execution, those unknown swap price-related fields can be reported as blank until such time that the price is known."]
	extract TradeForEvent( ReportableEvent ) then
        extract if Trade -> tradableProduct -> tradeLot -> priceQuantity -> price is absent and
            Trade -> executionDetails -> executionType = ExecutionTypeEnum -> OffFacility
            then True
            else False
			as "68 Post-priced swap indicator"

reporting rule Price <"Price">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "69" field "Price"
    	provision "Price specified in the OTC derivative transaction. It does not include fees, taxes or commissions.
        For commodity fixed/float swaps and similar products with periodic payments, this data element refers to the fixed price of the fixed leg(s).
        For commodity and equity forwards and similar products, this data element refers to the forward price of the underlying or reference asset.
        For equity swaps, portfolios swaps, and similar products, this data element refers to the initial price of the underlying or reference asset.
        For contracts for difference and similar products, this data element refers to the initial price of the underlier.
        This data element is not applicable to:
            - Interest rate swaps and forward rate agreements, as it is understood that the information included in the data elements Fixed rate and Spread may be interpreted as the price of the transaction.
            - Interest rate options and interest rate swaptions, as it is understood that the information included in the data elements Strike price and Option premium may be interpreted as the price of the transaction.
            - Commodity basis swaps and the floating leg of commodity fixed/float swaps, as it is understood that the information included in the data element Spread may be interpreted as the price of the transaction.
            - Foreign exchange swaps, forwards and options, as it is understood that the information included in the data elements Exchange rate, Strike price, and Option premium may be interpreted as the price of the transaction.
            - Equity options, as it is understood that the information included in the data elements Strike price and Option premium may be interpreted as the price of the transaction.
            - Credit default swaps and credit total return swaps, as it is understood that the information included in the data elements Fixed rate, Spread and Upfront payment (Other payment type: Upfront payment) may be interpreted as the price of the transaction.
            - Commodity options, as it is understood that the information included in the data elements Strike price and Option premium may be interpreted as the price of the transaction. Where the price is not known when a new transaction is reported, the price is updated as it becomes available.
        For transactions that are part of a package, this data element contains the price of the component transaction where applicable."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "69" field "Price" footnote "56"
        provision "While Price (#69) captures the prices at which counterparties negotiate contracts, market prices are reflected in the valuation amounts."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "69" field "Price" footnote "57"
        provision "The allowable values are restricted based on CFTC's jurisdictional requirements."]
	CDEPrice
		as "69 Price"

reporting rule PriceCurrency <"Price Currency">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "70" field "Price currency"
    	provision "Currency in which the price is denominated. Price currency is only applicable if Price notation = 1."]
	CDEPriceCurrency
		as "70 Price currency"

reporting rule PriceNotation <"Price Notation">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "71" field "Price Notation"
		provision "Manner in which the price is expressed."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "71" field "Price Notation" footnote "58"
        	provision "The allowable values are restricted based on CFTC's jurisdictional requirements."]
    CDEPriceNotation
		as "71 Price notation"

reporting rule PriceUnitOfMeasure <"Price Unit Of Measure">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "72" field "Price Unit Of Measure"
		provision "Unit of measure in which the price is expressed."]
    CDEPriceUnitOfMeasure
    	as "72 Price unit of measure"

reporting rule SpreadLeg1 <"SpreadLeg1">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "73" field "Spread-Leg1"
		provision "For each leg of the transaction, where applicable: for OTC derivative transactions with periodic payments (e.g., interest rate fixed/float swaps, interest rate basis swaps, commodity swaps),
                - spread on the individual floating leg(s) index reference price, in the case where there is a spread on a floating leg(s). For example, USD-LIBOR-BBA plus .03 or WTI minus USD 14.65; or
                - difference between the reference prices of the two floating leg indexes. For example, the 9.00 USD Spread for a WCS vs. WTI basis swap where WCS is priced at 43 USD and WTI is priced at 52 USD."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "73" field "Spread-Leg1" footnote "60"
        provision "For equity swaps, portfolio swaps, and contract for difference (CFDs), report the weighted overall spread for the basket instead of individual legs."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "73" field "Spread-Leg1" footnote "61"
        provision "The allowable values are restricted based on CFTC's jurisdictional requirements."]
	extract TradeForEvent( ReportableEvent ) then
        extract ProductForTrade( Trade )  then extract
            if IsCommodity( Product ) then CDESpread_Commodity( CommodityLeg1( Product ) )
            else if IsSwaption( Product ) then CDESpread_InterestRate( InterestRateLeg1( UnderlierForProduct( Product ) ) )
            else CDESpread_InterestRate( InterestRateLeg1( Product ) )
        then extract SpreadSchedule -> price -> amount
    as "73 Spread-Leg 1"

reporting rule SpreadLeg2 <"SpreadLeg2">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "73" field "Spread-Leg2"
        provision "For each leg of the transaction, where applicable: for OTC derivative transactions with periodic payments (e.g., interest rate fixed/float swaps, interest rate basis swaps, commodity swaps),
            - spread on the individual floating leg(s) index reference price, in the case where there is a spread on a floating leg(s). For example, USD-LIBOR-BBA plus .03 or WTI minus USD 14.65; or
            - difference between the reference prices of the two floating leg indexes. For example, the 9.00 USD Spread for a WCS vs. WTI basis swap where WCS is priced at 43 USD and WTI is priced at 52 USD."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "73" field "Spread-Leg2" footnote "60"
        provision "For equity swaps, portfolio swaps, and contract for difference (CFDs), report the weighted overall spread for the basket instead of individual legs."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "73" field "Spread-Leg2" footnote "61"
        provision "The allowable values are restricted based on CFTC's jurisdictional requirements."]
    extract TradeForEvent( ReportableEvent ) then
        extract ProductForTrade( Trade )  then extract
            if IsSwaption( Product ) or IsCreditSwaption( Product ) then CDESpread_InterestRate( InterestRateLeg2( UnderlierForProduct( Product ) ) )
            else if IsCommodity( Product ) then CDESpread_Commodity( CommodityLeg2( Product ) )
            else CDESpread_InterestRate( InterestRateLeg2( Product ) )
        then extract SpreadSchedule -> price -> amount
    as "73 Spread-Leg 2"

reporting rule SpreadCurrencyLeg1 <"Spread currency Leg 1">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "74" field "Spread currency-Leg1"
		provision "For each leg of the transaction, where applicable: currency in which the spread is denominated. This data element is only applicable if Spread notation = 1."]
    extract TradeForEvent( ReportableEvent ) then
        extract ProductForTrade( Trade ) then extract
            if IsSwaption( Product ) then CDESpread_InterestRate( InterestRateLeg1( UnderlierForProduct( Product ) ) )
            else if IsCommodity( Product ) then CDESpread_Commodity( CommodityLeg1( Product ) )
            else CDESpread_InterestRate( InterestRateLeg1( Product ) )
        then extract SpreadSchedule -> price then
            filter when IsPriceMonetary( PriceSchedule ) then
                extract PriceSchedule -> unitOfAmount -> currency
	as "74 Spread currency-Leg 1"

reporting rule SpreadCurrencyLeg2 <"Spread currency Leg2">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "74" field "Spread currency-Leg2"
        provision "For each leg of the transaction, where applicable: currency in which the spread is denominated. This data element is only applicable if Spread notation = 1."]
    extract TradeForEvent( ReportableEvent ) then
        extract ProductForTrade( Trade )  then extract
            if IsSwaption( Product ) then CDESpread_InterestRate( InterestRateLeg2( UnderlierForProduct( Product ) ) )
            else if IsCreditSwaption( Product ) then CDESpread_InterestRate( InterestRateLeg2( UnderlierForProduct( Product ) ) )
            else if IsCommodity( Product ) then CDESpread_Commodity( CommodityLeg2( Product ) )
            then
            extract SpreadSchedule -> price then
                filter when IsPriceMonetary( PriceSchedule ) then
                    extract PriceSchedule -> unitOfAmount -> currency
    as "74 Spread currency-Leg 2"

reporting rule SpreadNotationLeg1 <"Spread Notation Leg 1">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "75" field "Spread Notation Leg 1"
		provision "For each leg of the transaction, where applicable: manner in which the spread is expressed."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "75" field "Spread Notation Leg 1" footnote "62"
        provision "The allowable values are restricted based on CFTC's jurisdictional requirements."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "75" field "Spread Notation Leg 1" footnote "63"
        provision "The allowable values are restricted based on CFTC's jurisdictional requirements."]
    extract TradeForEvent( ReportableEvent ) then
        extract ProductForTrade( Trade )  then extract
            if IsSwaption( Product ) then CDESpread_InterestRate( InterestRateLeg1( UnderlierForProduct( Product ) ) )
            else if IsCommodity( Product ) then CDESpread_Commodity( CommodityLeg1( Product ) )
            else  CDESpread_InterestRate( InterestRateLeg1( Product ) )
            then
			filter when SpreadSchedule -> price -> amount exists
                then extract if IsPriceMonetary( SpreadSchedule -> price )
                    then "1"
                    else "3"
        as "75 Spread notation-Leg 1"

reporting rule SpreadNotationLeg2 <"Spread Notation Leg 2">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "75" field "Spread Notation Leg 2"
        provision "For each leg of the transaction, where applicable: manner in which the spread is expressed."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "75" field "Spread Notation Leg 2" footnote "62"
        provision "The allowable values are restricted based on CFTC's jurisdictional requirements."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "75" field "Spread Notation Leg 2" footnote "63"
        provision "The allowable values are restricted based on CFTC's jurisdictional requirements."]
    extract TradeForEvent( ReportableEvent ) then
        extract ProductForTrade( Trade )  then extract
            if IsSwaption( Product ) then CDESpread_InterestRate( InterestRateLeg2( UnderlierForProduct( Product ) ) )
            else if IsCreditSwaption( Product ) then CDESpread_InterestRate( InterestRateLeg2( UnderlierForProduct( Product ) ) )
            else if IsCommodity( Product ) then CDESpread_Commodity( CommodityLeg2( Product ) )
            else CDESpread_InterestRate( InterestRateLeg2( Product ) )
            then
            filter when SpreadSchedule -> price -> amount exists
                then extract if IsPriceMonetary( SpreadSchedule -> price )
                    then "1"
                    else "3"
            as "75 Spread notation-Leg 2"

//TH Review --> before delete
/*
reporting rule SpreadLeg1 <"SpreadLeg1">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "73" field "Spread-Leg1"
		provision "For each leg of the transaction, where applicable: for OTC derivative transactions with periodic payments (e.g., interest rate fixed/float swaps, interest rate basis swaps, commodity swaps),
                - spread on the individual floating leg(s) index reference price, in the case where there is a spread on a floating leg(s). For example, USD-LIBOR-BBA plus .03 or WTI minus USD 14.65; or
                - difference between the reference prices of the two floating leg indexes. For example, the 9.00 USD Spread for a WCS vs. WTI basis swap where WCS is priced at 43 USD and WTI is priced at 52 USD."]
	extract TradeForEvent( ReportableEvent ) then
        extract ProductForTrade( Trade )  then
        (
            extract CommodityLeg1( Product ) then
                CDESpread_Commodity
            ,
            extract
                if IsSwaption( Product ) then
                    InterestRateLeg1( UnderlierForProduct( Product ) )
                else
                    InterestRateLeg1( Product )
                then
                    CDESpread_InterestRate
        ) then
            extract SpreadSchedule -> price -> amount
                as "73 Spread-Leg 1"

reporting rule SpreadLeg2 <"SpreadLeg2">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "73" field "Spread-Leg2"
        provision "For each leg of the transaction, where applicable: for OTC derivative transactions with periodic payments (e.g., interest rate fixed/float swaps, interest rate basis swaps, commodity swaps),
            - spread on the individual floating leg(s) index reference price, in the case where there is a spread on a floating leg(s). For example, USD-LIBOR-BBA plus .03 or WTI minus USD 14.65; or
            - difference between the reference prices of the two floating leg indexes. For example, the 9.00 USD Spread for a WCS vs. WTI basis swap where WCS is priced at 43 USD and WTI is priced at 52 USD."]
    extract TradeForEvent( ReportableEvent ) then
        extract ProductForTrade( Trade )  then
        (
            (
                filter when IsSwaption( Product ) then
                    extract InterestRateLeg2( UnderlierForProduct( Product ) ),
                filter when IsCreditSwaption( Product ) then
                    extract InterestRateLeg2( UnderlierForProduct( Product ) ),
                extract InterestRateLeg2( Product )
            ) then CDESpread_InterestRate,
            extract CommodityLeg2( Product ) then CDESpread_Commodity
        ) then
            extract SpreadSchedule -> price -> amount
        as "73 Spread-Leg 2"

reporting rule SpreadCurrencyLeg1 <"Spread currency Leg 1">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "74" field "Spread currency-Leg1"
		provision "For each leg of the transaction, where applicable: currency in which the spread is denominated. This data element is only applicable if Spread notation = 1."]
    extract TradeForEvent( ReportableEvent ) then
        extract ProductForTrade( Trade )  then
        (
            (
                filter when IsSwaption( Product ) then
                    extract UnderlierForProduct( Product ) then extract InterestRateLeg1( Product ),
                extract InterestRateLeg1( Product )
            ) then CDESpread_InterestRate,
            extract CommodityLeg1( Product ) then CDESpread_Commodity
        )
        then
            extract SpreadSchedule -> price then
                filter when IsPriceMonetary( PriceSchedule ) then
                    extract PriceSchedule -> unitOfAmount -> currency
	    as "74 Spread currency-Leg 1"

reporting rule SpreadCurrencyLeg2 <"Spread currency Leg2">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "74" field "Spread currency-Leg2"
        provision "For each leg of the transaction, where applicable: currency in which the spread is denominated. This data element is only applicable if Spread notation = 1."]
    extract TradeForEvent( ReportableEvent ) then
        extract ProductForTrade( Trade )  then
        (
            (
            filter when IsSwaption( Product ) then
                extract UnderlierForProduct( Product ) then extract InterestRateLeg2( Product ),
            filter when IsCreditSwaption( Product ) then
                    extract UnderlierForProduct( Product ) then extract InterestRateLeg2( Product ),
            extract InterestRateLeg2( Product )
            ) then CDESpread_InterestRate,
            extract CommodityLeg2( Product ) then CDESpread_Commodity
        )
            then
            extract SpreadSchedule -> price then
                filter when IsPriceMonetary( PriceSchedule ) then
                    extract PriceSchedule -> unitOfAmount -> currency
    as "74 Spread currency-Leg 2"

reporting rule SpreadNotationLeg1 <"Spread Notation Leg 1">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "75" field "Spread Notation Leg 1"
		provision "For each leg of the transaction, where applicable: manner in which the spread is expressed."]
    extract TradeForEvent( ReportableEvent ) then
        extract ProductForTrade( Trade )  then
        (
            (
                filter when IsSwaption( Product ) then
                    extract UnderlierForProduct( Product ) then extract InterestRateLeg1( Product ),
                extract InterestRateLeg1( Product )
            ) then CDESpread_InterestRate,
            extract CommodityLeg1( Product ) then CDESpread_Commodity
        ) then
			filter when SpreadSchedule -> price -> amount exists
                then extract if IsPriceMonetary( SpreadSchedule -> price )
                    then "1"
                    else "3"
        as "75 Spread notation-Leg 1"

reporting rule SpreadNotationLeg2 <"Spread Notation Leg 2">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "75" field "Spread Notation Leg 2"
        provision "For each leg of the transaction, where applicable: manner in which the spread is expressed."]
    extract TradeForEvent( ReportableEvent ) then
        extract ProductForTrade( Trade )  then
        (
            (
                filter when IsSwaption( Product ) then
                    extract UnderlierForProduct( Product ) then extract InterestRateLeg2( Product ),
                filter when IsCreditSwaption( Product ) then
                    extract UnderlierForProduct( Product ) then extract InterestRateLeg2( Product ),
                extract InterestRateLeg2( Product )
            ) then CDESpread_InterestRate,
            extract CommodityLeg2( Product ) then CDESpread_Commodity
        ) then
            filter when SpreadSchedule -> price -> amount exists
                then extract if IsPriceMonetary( SpreadSchedule -> price )
                    then "1"
                    else "3"
            as "75 Spread notation-Leg 2"
*/
reporting rule StrikePrice <"Strike Price">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "76" field "Strike Price"
        provision "For options other than FX options, swaptions and similar products, price at which the owner of an option can buy or sell the underlying asset of the option. For foreign exchange options, exchange rate at which the option can be exercised, expressed as the rate of exchange from converting the unit currency into the quoted currency. In the example 0.9426 USD/EUR, USD is the unit currency and EUR is the quoted currency; USD 1 = EUR 0.9426. Where the strike price is not known when a new transaction is reported, the strike price is updated as it becomes available. For volatility and variance swaps and similar products, the volatility strike price is reported in this data element"]
	CDEStrikePrice then extract PriceSchedule -> amount
        as "76 Strike Price"

reporting rule StrikePriceCurrency <"Strike Price Currency">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "77" field "Strike Price Currency"
        provision "For equity options, commodity options, and similar products, currency in which the strike price is denominated. For foreign exchange options: Currency pair and order in which the strike price is expressed. It is expressed as unit currency/quoted currency. In the example 0.9426 USD/EUR, USD is the unit currency and EUR is the quoted currency, USD 1 = EUR 0.9426. Strike price currency/currency pair is only applicable if Strike price notation = 1."]
	CDEStrikePriceCurrency
        as "77 Strike Price Currency"

reporting rule StrikePriceNotation <"Strike Price Notation">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "78" field "Strike Price Notation"
		provision "Manner in which the strike price is expressed."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "78" field "Strike Price Notation" footnote "64"
        	provision "The allowable values are restricted based on CFTC's jurisdictional requirements."]
    CDEStrikePriceNotation
			as "78 Strike Price notation"

reporting rule OptionPremiumAmount <"Option Premium Amount">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "79" field "Option Premium Amount"
        provision "For options and swaptions of all asset classes, monetary amount paid by the option buyer. This data element is not applicable if the instrument is not an option or does not embed any optionality."]
    CDEOptionPremiumAmount
        as "79 Option Premium Amount"

reporting rule OptionPremiumCurrency <"Option Premium Currency">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "80" field "Option Premium Currency"
        provision "For options and swaptions of all asset classes, currency in which the option premium amount is denominated. This data element is not applicable if the instrument is not an option or does not embed any optionality."]
    CDEOptionPremiumCurrency
        as "80 Option Premium Currency"

reporting rule OptionPremiumPaymentDate <"Option Premium Payment Date">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "81" field "Option Premium Payment Date"
		provision "Unadjusted date on which the option premium is paid."]
	CDEOptionPremiumPaymentDate
		as "81 Option Premium Payment Date"

reporting rule FirstExerciseDate <"First Exercise Date">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "82" field "First Exercise Date"
		provision "First unadjusted date during the exercise period in which an option can be exercised.
				   For European-style options, this date is same as the Expiration date. For American-style options, the first possible exercise date is the unadjusted date included in the Execution timestamp.
				   For knock-in options, where the first exercise date is not known when a new transaction is reported, the first exercise date is updated as it becomes available.
				   This data element is not applicable if the instrument is not an option or does not embed any optionality"]
    extract TradeForEvent( ReportableEvent ) then extract ProductForTrade( Trade )
        then extract Product -> contractualProduct -> economicTerms -> payout -> optionPayout -> exerciseTerms -> optionStyle
            then CDEFirstExerciseDate
	as "82 First exercise date"

reporting rule CDSIndexAttachmentPoint <"CDS Index Attachment Point">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "83" field "CDS Index Attachment Point"
        provision "Defined lower point at which the level of losses in the underlying portfolio reduces the notional of a tranche. For example, the notional in a tranche with an attachment point of 3% will be reduced after 3% of losses in the portfolio have occurred. This data element is not applicable if the transaction is not a CDS tranche transaction (index or custom basket)."]
    CDECDSIndexAttachmentPoint
        as "83 CDS Index Attachment Point"

reporting rule CDSIndexDetachmentPoint <"CDS Index Detachment Point">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "84" field "CDS Index Detachment Point"
        provision "Defined point beyond which losses in the underlying portfolio no longer reduce the notional of a tranche. For example, the notional in a tranche with an attachment point of 3% and a detachment point of 6% will be reduced after there have been 3% of losses in the portfolio. 6% losses in the portfolio deplete the notional of the tranche. This data element is not applicable if the transaction is not a CDS tranche transaction (index or custom basket)."]
    CDECDSIndexDetachmentPoint
        as "84 CDS Index Detachment Point"

reporting rule IndexFactor <"Index Factor">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "85" field "Index Factor"
		provision "The index version factor or percent, expressed as a decimal value, that multiplied by the Notional amount yields the notional amount covered by the seller of protection for credit default swap."]
        extract TradeForEvent( ReportableEvent ) then
            filter when IsCreditDefaultSwapIndex( Trade ) then
                extract Trade -> tradableProduct -> product -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> generalTerms -> indexReferenceInformation -> indexFactor
		as "85 Index factor"

reporting rule EmbeddedOptionType <"Embedded Option Type">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "86" field "Embedded Option Type"
        rationale "The US Compliance WG discussed #86 on May 19 WG call. The alternatives of the hierarchy (and OTHR were discussed (BNP and CS were on and assisted). 2 types of hierarchies were discussed
                - the one raised in Peer WG, and
                - one raised on the US WG call of a chronological (e.g. which came 1st).
            The consensus was that for cases where one option may have multiple provisions applicable, including the example of having both mandatory (MDET) and early termination (OPET) provisions applicable, the WG agreed to use the allowable value OTHR, rather than any hierarchy."
		rationale_author "US Compliance WG - 19/05/22"
        provision "Type of option or optional provision embedded in a contract."]
    extract TradeForEvent( ReportableEvent ) then
        extract Trade -> tradableProduct -> product -> contractualProduct -> economicTerms then
        extract
            // only optionProvision
            if EconomicTerms -> optionProvision exists and EconomicTerms -> earlyTerminationProvision is absent then
                if EconomicTerms -> optionProvision -> extendibleProvision only exists then "EXTD" //EXTD
                else if EconomicTerms -> optionProvision -> cancelableProvision only exists then "CANC" // CANC
                else "OTHR" // EXTD + CANC
            else if EconomicTerms -> earlyTerminationProvision exists and EconomicTerms -> optionProvision is absent then
                if EconomicTerms -> earlyTerminationProvision -> optionalEarlyTermination only exists then "OPET" // OPET
                else if EconomicTerms -> earlyTerminationProvision -> mandatoryEarlyTermination only exists then "MDET" //MDET
                else "OTHR" //OPET + MDET
            else if EconomicTerms -> optionProvision exists and EconomicTerms -> earlyTerminationProvision exists then "OTHR" //EXTD/CANC + OPET/MDET
    as "86 Embedded Option Type"

reporting rule UniqueProductIdentifier <"Unique Product Identifier">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "87" field "Unique Product Identifier"
		provision "A unique set of characters that represents a particular OTC derivative. The Commission will designate a UPI pursuant to part 45.7.
				   Note: A Unique product identifier short name (D4), defined as, 'When the Commission designates a UPI pursuant to part 45, a humanly readable description made available by the UPI issuer corresponding to the UPI'."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "87" field "Unique Product Identifier" footnote "65"
        provision "Until the Commission designates a UPI pursuant to part 45, continue reporting product data elements according to the internal product identifier or product description used by the swap data repository to which the swap is reported. When the Commission designates a UPI pursuant to part 45, report the UPI."]
        extract TradeForEvent( ReportableEvent ) then
            extract Trade -> tradableProduct -> product -> contractualProduct -> productIdentifier
                filter [ item -> source = ProductIdTypeEnum -> UPI] only-element then
		            extract ProductIdentifier -> identifier
        as "87 Unique product identifier"

reporting rule FinalContractualSettlementDate <"Final Contractual Settlement Date">
 	[regulatoryReference CFTC Part45 appendix "1" dataElement "88" field "Final Contractual Settlement Date"
 		provision "Unadjusted date as per the contract, by which all transfer of cash or assets should take place and the counterparties should no longer have any outstanding obligations to each other under that contract. For products that may not have a final contractual settlement date (eg American options), this data element reflects the date by which the transfer of cash or asset would take place if termination were to occur on the expiration date."]
	extract TradeForEvent( ReportableEvent ) then
        extract [ CDEFinalContractualSettlementDate( Trade ), CDEExpirationDate( Trade -> tradableProduct -> product ) ] max
        as "88 Final Contractual Settlement Date"

reporting rule SettlementCurrencyLeg1 <"Settlement Currency Leg 1">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "89" field "Settlement Currency"
        rationale "In the case where settlement currency is not provided, model does not infer cash vs. physical settlement based on the product and then extract the notional currency as settlement currency. The conclusion at Peer Review was that firms should fill out the settlement currency field if it is reportable and DRR should not infer it from the notional."
        rationale_author "DRR Peer Review Group"
        provision "Currency for the cash settlement of the transaction when applicable. For multicurrency products that do not net, the settlement currency of each leg. This data element is not applicable for physically settled products (eg physically settled swaptions)."]
    extract TradeForEvent( ReportableEvent ) then extract ProductForTrade( Trade )  then
        extract SettlementTermsLeg1( Product ) then CDESettlementCurrency
	as "89 Settlement Currency Leg 1"

reporting rule SettlementCurrencyLeg2 <"Settlement Currency Leg 2">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "89" field "Settlement Currency"
        rationale "In the case where settlement currency is not provided, model does not infer cash vs. physical settlement based on the product and then extract the notional currency as settlement currency. The conclusion at Peer Review was that firms should fill out the settlement currency field if it is reportable and DRR should not infer it from the notional."
        rationale_author "DRR Peer Review Group"
        provision "Currency for the cash settlement of the transaction when applicable. For multicurrency products that do not net, the settlement currency of each leg. This data element is not applicable for physically settled products (eg physically settled swaptions)."]
    extract TradeForEvent( ReportableEvent ) then extract ProductForTrade( Trade )  then
        extract SettlementTermsLeg2( Product ) then CDESettlementCurrency
	as "89 Settlement Currency Leg 2"
      
reporting rule SettlementLocationLeg1 <"Settlement Location Leg 1">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "90" field "Settlement Location Leg 1"
        provision "Place of settlement of the transaction as stipulated in the contract. This data element is only applicable for transactions that involve an offshore currency (i.e. a currency which is not included in the ISO 4217 currency list, for example CNH)."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "90" field "Settlement Location Leg 1" footnote "66"
        provision "CFTC requires ISO country code to be reported using two-letter code (alpha-2)."]
    extract TradeForEvent( ReportableEvent ) then extract ProductForTrade( Trade ) then extract SettlementTermsLeg1( Product ) then
    extract if (SettlementTerms -> settlementType = SettlementTypeEnum -> Cash or SettlementTerms -> cashSettlementTerms exists) and
         SettlementTerms -> settlementCurrency = "CNH" then "HK"
    as "90 Settlement Location- Leg 1"

reporting rule SettlementLocationLeg2 <"Settlement Location Leg 2">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "90" field "Settlement Location Leg 2"
        provision "Place of settlement of the transaction as stipulated in the contract. This data element is only applicable for transactions that involve an offshore currency (i.e. a currency which is not included in the ISO 4217 currency list, for example CNH)."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "90" field "Settlement Location Leg 2" footnote "66"
        provision "CFTC requires ISO country code to be reported using two-letter code (alpha-2)."]
    extract TradeForEvent( ReportableEvent ) then extract ProductForTrade( Trade ) then extract SettlementTermsLeg2( Product ) then
    extract if (SettlementTerms -> settlementType = SettlementTypeEnum -> Cash or SettlementTerms -> cashSettlementTerms exists) and
         SettlementTerms -> settlementCurrency = "CNH" then "HK"
    as "90 Settlement Location- Leg 2"

reporting rule AllocationIndicator <"Allocation Indicator">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "91" field "Allocation Indicator"
        provision "Indicator of whether the swap transaction is intended to be allocated, will not be allocated, or is a post allocation transaction."]
    extract 
        if Qualify_Allocation(ReportableEvent -> originatingWorkflowStep -> businessEvent) then "POST"
        else if ReportableEvent -> originatingWorkflowStep -> nextEvent -> intent = EventIntentEnum -> Allocation then "PREA"
        else "UNAL"
    as "91 Allocation Indicator"

reporting rule NonStandardizedTermIndicator <"Non-standardized Term Indicator">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "92" field "Non-standardized Term Indicator"
        //possible rational
        provision "Indicator of whether the swap transaction has one or more additional term(s) or provision(s), other than those disseminated to the public pursuant to part 43, that materially affect(s) the price of the swap transaction."]
    //TH Review -> Part of the generic product support discussion may change this rule.
    extract if IsCleared (ReportableEvent -> originatingWorkflowStep) = False 
    and ReportableEvent -> originatingWorkflowStep -> nextEvent -> intent <> EventIntentEnum -> Clearing then 
        TradeForEvent ( ReportableEvent ) then 
            extract ProductForTrade ( Trade ) then 
                extract if Product -> contractualProduct -> economicTerms -> nonStandardisedTerms exists then 
                    Product -> contractualProduct -> economicTerms -> nonStandardisedTerms 
                else False
    as "92 Non-standardized Term Indicator"

reporting rule BlockTradeElectionIndicator <"Block Trade Election Indicator">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "93" field "Block Trade Election Indicator"
        rationale "If blockTradeIndicator is not present then report as false"
        rationale_author "ICE - 20/04/22"
        provision "Indicator of whether an election has been made to report the swap transaction as a block transaction by the reporting counterparty or as calculated by either the swap data repository acting on behalf of the reporting counterparty or by using a third party."]
    extract
        if ReportableEvent -> reportableInformation -> largeSizeTrade exists then
            ReportableEvent -> reportableInformation -> largeSizeTrade
        else
            False
    as "93 Block Trade Election Indicator"

reporting rule EffectiveDate <"Effective Date">
    [regulatoryReference CFTC Part45 appendix "1" dataElement "94" field "Effective Date"
        provision "Unadjusted date at which obligations under the OTC derivative transaction come into effect, as included in the confirmation."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "94" field "Effective Date" footnote "67"
        provision "For commodities swaps, report the pricing start date."]
    CDEEffectiveDate
        as "94 Effective Date"

reporting rule ExpirationDate <"ExpirationDate">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "95" field "Expiration date"
		provision "Unadjusted date at which obligations under the OTC derivative transaction stop being effective, as included in the confirmation. Early termination does not affect this data element."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "95" field "Expiration Date" footnote "68"
        provision "For commodities swaps, report the pricing end date."]
	extract TradeForEvent( ReportableEvent ) then
        extract ProductForTrade( Trade ) then
            extract CDEExpirationDate( Product )
		    as "95 Expiration date"

reporting rule ExecutionTimestamp <"Execution Timestamp">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "96" field "Execution Timestamp"
		provision "Date and time a transaction was originally executed, resulting in the generation of a new UTI. This data element remains unchanged throughout the life of the UTI."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "96" field "Execution Timestamp" footnote "69"
        provision "For clearing swaps, the execution timestamp is the date and time when the DCO accepts the original swap."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "96" field "Execution Timestamp" footnote "70"
        provision "Both the date and time portion are required to be reported.toBoth the date and time portion are required to be reported."]
	CDEExecutionTimestamp
		as "96 Execution Timestamp"

reporting rule ReportingTimestamp <"Reporting Timestamp">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "97" field "Reporting Timestamp"
		provision"Date and time of the submission of the report to the trade repository"]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "97" field "Reporting Timestamp" footnote "71"
        	provision "Reporting timestamp (#97) is recorded and reported by the submitter."]
    CDEReportingTimestamp
        as "97 Reporting timestamp"

reporting rule PlatformIdentifier <"Platform Identifier">
	[regulatoryReference CFTC Part45 appendix "1" dataElement "98" field "Platform Identifier"
		rationale "Headline would be
                        - that it would need to be a CDM field on the input (containing an ISO 10383 MIC)
                        - Reporting Logic would need to include reference data for Authorised platforms in all jurisdictions
                        - Products Listed on US SEFs > no source identified

                    This is because you could have a scenario where a transaction would
                        - Report a MIC for EMIR but XXXX for CFTC
                        - Report a MIC for MiFID but XOFF for CFTC"
        rationale_author "Credit-Suisse - 28/03/2022"
        provision"Identifier of the trading facility (e.g., exchange, multilateral trading facility, swap execution facility) on which the transaction was executed."]
	CDEPlatformIdentifier as "98 Platform Identifier"

reporting rule PrimeBrokerageTransactionIndicator <"Prime brokerage transaction indicator">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"99" field "Prime brokerage transaction indicator"
        rationale "The modeling approach is to determine based on one of the two counterparts being identified as Prime Broker"
        rationale_author "DRR Peer Review Group - 25/03/22"
        provision"Indicator of whether the swap transaction satisfies the definition of 'mirror swap' or 'trigger swap' in para 43.2(a) of the Commissions regulations."]
    filter when IsCleared(ReportableEvent -> originatingWorkflowStep) = False then
        extract ExtractPartyFromRelatedPartyByRole( ReportableEvent -> reportableInformation -> partyInformation -> relatedParty, PartyRoleEnum -> PrimeBroker ) exists
    as "99 Prime brokerage transaction indicator"

reporting rule PriorUSI <"Prior USI">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"100" field "Prior USI"
        provision "Unique swap identifier (USI) assigned to the predecessor transaction that has given rise to the reported transaction due to a lifecycle event, in a one-to-one relation between transactions (e.g., in the case of a novation, when a transaction is terminated, and a new transaction is generated) or in a one-to-many relation between transactions (e.g., in clearing or if a transaction is split into several different transactions), This data element is not applicable when reporting many-to-one and many-to-many relations between transactions (e.g., in the case of a compression)."]
	extract
	    if TradeForEvent(ReportableEvent) -> tradeIdentifier -> assignedIdentifier -> identifier <> BeforeTradeForEvent(ReportableEvent) -> tradeIdentifier -> assignedIdentifier -> identifier
                and Qualify_Compression(ReportableEvent -> originatingWorkflowStep -> businessEvent) = False then
            BeforeTradeForEvent(ReportableEvent)
        then extract Trade -> tradeIdentifier -> assignedIdentifier
        filter [item -> identifierType = TradeIdentifierTypeEnum -> UniqueSwapIdentifier] only-element then
        extract AssignedIdentifier -> identifier
    as "100 Prior USI"

reporting rule PriorUTI <"Prior UTI">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"101" field "Prior UTI"
        provision "UTI assigned to the predecessor transaction that has given rise to the reported transaction due to a lifecycle event, in a one-to-one relation between transactions (e.g., in the case of a novation, when a transaction is terminated, and a new transaction is generated) or in a one-to-many relation between transactions (e.g., in clearing or if a transaction is split into several different transactions). This data element is not applicable when reporting many-to-one and many-to-many relations between transactions (e.g., in the case of a compression)."]
    extract
        if TradeForEvent(ReportableEvent) -> tradeIdentifier -> assignedIdentifier -> identifier <> BeforeTradeForEvent(ReportableEvent) -> tradeIdentifier -> assignedIdentifier -> identifier
                and Qualify_Compression(ReportableEvent -> originatingWorkflowStep -> businessEvent) = False then
            BeforeTradeForEvent(ReportableEvent) then CDEPriorUTI
    as "101 Prior UTI"

reporting rule UniqueSwapIdentifier <"Unique Swap Identifier (USI)">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"102" field "Unique Swap Identifier (USI)"
        rationale "Rule does not model UTI > USI priority defined in CFTC specification."
        rationale_author "DRR Peer Review Group - 09/03/22"
        rationale "Firms do expect to report USI/UTI in both formats: as a single identifier field as well as using Issuer + identifier. The functional model needs to handle both scenarios."
        rationale_author "DRR Peer Review Group- 09/03/22"
        provision"The USI is a unique identifier assigned to all swap transactions which identifies the transaction (the swap and its counterparties) uniquely throughout its duration. It consists of a namespace and a transaction identifier."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "102" field "Unique Swap Identifier (USI)" footnote "72"
        provision "Throughout this Technical Specification, references to 'CFTC USI Data Standard' should refer to the USI Data Standard, https://www.cftc.gov/sites/default/files/idc/groups/public/@swaps/documents/dfsubmission/usidatastandards100112.pdf"]
    extract TradeForEvent( ReportableEvent ) then
        extract Trade -> tradeIdentifier -> assignedIdentifier
            filter [item -> identifierType = TradeIdentifierTypeEnum -> UniqueSwapIdentifier] only-element then
                extract AssignedIdentifier -> identifier
    as "102 Unique Swap Identifier (USI)"

reporting rule UniqueTransactionIdentifier <"Unique Transaction Identifier (UTI)">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"103" field "Unique Transaction Identifier (UTI)"
        rationale "Rule does not model UTI > USI priority defined in CFTC specification."
        rationale_author "DRR Peer Review Group- 09/03/22"
        rationale "Firms do expect to report USI/UTI in both formats: as a single identifier field as well as using Issuer + identifier. The functional model needs to handle both scenarios."
        rationale_author "DRR Peer Review Group- 09/03/22"
        provision"A unique identifier assigned to all swap transactions which identifies the swap uniquely throughout its lifecycle and used for all recordkeeping and all swap data reporting pursuant to para 45.5. A UTI is comprised of the LEI of the generating entity and a unique alphanumeric code."]
    extract TradeForEvent( ReportableEvent ) then
        extract Trade -> tradeIdentifier -> assignedIdentifier
            filter [item -> identifierType = TradeIdentifierTypeEnum -> UniqueTransactionIdentifier] only-element then
                extract AssignedIdentifier -> identifier
    as "103 Unique Transaction Identifier (UTI)"

reporting rule Jurisdiction <"Jurisdiction">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"104" field "Jurisdiction Indicator"
        provision"The jurisdiction(s) that is requiring the reporting of the swap transaction."]
    extract if ReportableEvent -> reportableInformation -> partyInformation -> regimeInformation -> supervisoryBody any = SupervisoryBodyEnum -> CFTC and ReportableEvent -> reportableInformation -> partyInformation -> regimeInformation -> supervisoryBody any = SupervisoryBodyEnum -> SEC then "MIXX"
        else if ReportableEvent -> reportableInformation -> partyInformation -> regimeInformation -> supervisoryBody any = SupervisoryBodyEnum -> SEC then "SECH"
        else if ReportableEvent -> reportableInformation -> partyInformation -> regimeInformation -> supervisoryBody any = SupervisoryBodyEnum -> CFTC then "CFTC"
    as "104 Jurisdiction"

reporting rule NewSDRIdentifier <"New SDR Identifier"> 
    [regulatoryReference CFTC Part45 appendix "1" dataElement"105" field "New SDR Identifier"
        provision"Identifier of the new swap data repository where the swap transaction is transferred to."]
        return "Not Modelled"
            as "105 New SDR Identifier"

reporting rule NextFloatingReferenceResetDate <"Next Floating Reference Reset Date">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"106" field "Next Floating Reference Reset Date"
        provision"The nearest date in the future that the floating reference resets on."]
        return "Not Modelled"
            as "106 Next Floating Reference Reset Date"

reporting rule LastFloatingReferenceValue <"Last Floating Reference Value">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"107" field "Last Floating Reference Value"
        provision"The most recent sampling of the value of the floating reference for to determine cash flow. Ties to Last floating reference reset date data element."]
        return "Not Modelled"
            as "107 Last Floating Reference Value"

reporting rule LastFloatingReferenceResetDate <"Last Floating Reference Reset Date">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"108" field "Last floating reference reset date"
        provision"The date of the most recent sampling of the floating reference to determine cash flow. Ties to Last floating reference value data element."]
        return "Not Modelled"
            as "108 Last Floating Reference Reset Date"

reporting rule Delta <"Delta">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"109" field "Delta"
        rationale "The delta should be reported at the transaction (the one calculated by the reporting party) not calculated in CDM."
        rationale_author "US Compliance WG - 2/8/2022"
        provision"The ratio of the absolute change in price of an OTC derivative transaction to the change in price of the underlier, at the time a new transaction is reported or when a change in the notional amount is reported."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "109" field "Delta" footnote "73"
        provision "Delta must be reported daily regardless of whether there is a change in the value since the last reporting."]
        return "Not Modelled"
            as "109 Delta"

reporting rule ValuationAmount <"Valuation Amount">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"110" field "Valuation Amount"
        provision"Current value of the outstanding contract. Valuation amount is expressed as the exit cost of the contract or components of the contract, i.e., the price that would be received to sell the contract (in the market in an orderly transaction at the valuation date)."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "110" field "Valuation Amount" footnote "75"
        provision "Valuation amount must be reported daily regardless of whether there is a change in the value since the last reporting."]
        return "Not Modelled"
            as "110 Valuation Amount"

reporting rule ValuationCurrency <"Valuation Currency">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"111" field "Valuation Currency"
        provision"Currency in which the valuation amount is denominated."]
        return "Not Modelled"
            as "111 Valuation Currency"

reporting rule ValuationMethod <"Valuation Method">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"112" field "Valuation Method"
        provision"Source and method used for the valuation of the transaction by the reporting counterparty. If at least one valuation input is used that is classified as mark-to-model in appendix D, then the whole valuation is classified as mark-to-model. If only inputs are used that are classified as mark-to-market in appendix D, then the whole valuation is classified as mark-to-market."]
        return "Not Modelled"
            as "112 Valuation Method"

reporting rule ValuationTimestamp <"Valuation Timestamp">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"113" field "Valuation Timestamp"
        provision"Date and time of the last valuation marked to market, provided by the central counterparty (CCP) or calculated using the current or last available market price of the inputs. If for example a currency exchange rate is the basis for a transactions valuation, then the valuation timestamp reflects the moment in time that exchange rate was current."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "113" field "Valuation Timestamp" footnote "76"
        provision "Reported by the derivatives clearing organization (DCO) for cleared swaps and by the swap dealer for uncleared swaps"]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "113" field "Valuation Timestamp" footnote "77"
        provision "The timestamp portion is not required to be represented for Valuation timestamp. The format must be reported as YYYY-MM-DD."]
        return "Not Modelled"
            as "113 Valuation Timestamp"            

reporting rule AffiliatedCounterpartyForMarginAndCapitalIndicator <"Affiliated Counterparty For Margin And Capital Indicator">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"114" field "Affiliated Counterparty For Margin And Capital Indicator"
        provision"Indicator of whether the current counterparty is deemed an affiliate for U.S. margin and capital rules (as per para 23.159)."]
        return "Not Modelled"
            as "114 Affiliated Counterparty For Margin And Capital Indicator"
            
reporting rule CollateralisationCategory <"Collateralisation Category">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"115" field "Collateralisation Category"
    provision"Indicator of whether a collateral agreement (or collateral agreements) between the counterparties exists (uncollateralised/partially collateralised/one-way collateralised/fully collateralised). This data element is provided for each transaction or each portfolio, depending on whether the collateralisation is performed at the transaction or portfolio level, and is applicable to both cleared and uncleared transactions."]
        return "Not Modelled"
            as "115 Collateralisation Category"

reporting rule InitialMarginCollateralPortfolioCode <"Initial Margin Collateral Portfolio Code">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"116" field "Initial Margin Collateral Portfolio Code"
        rationale "For CFTC, the Peer WG noted that fns #74/77 for #116 IMCode/124 VMCode Tech Specs state If collateralization was performed on a transaction level basis, TRANSACTIONLEVEL is accepted.  (Ticket 171)."
        rationale_author "Peer Review WG - 16/3/2022"
        provision"If collateral is reported on a portfolio basis, a unique code assigned by the reporting counterparty to the portfolio that tracks the aggregate initial margin of a set of open swap transactions. This data element is not applicable if the collateralisation was performed on a transaction level basis, or if there is no collateral agreement, or if no collateral is posted or received. The portfolio code is required for both collateral reporting and valuation reporting in order to link the 2 data sets."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "116" field "Initial Margin Collateral Portfolio Code" footnote "78"
        provision "If collateralization was performed on a transaction level basis, 'TRANSACTION-LEVEL' is accepted."]
        return "Not Modelled"
            as "116 Initial Margin Collateral Portfolio Code"
    
reporting rule PortfolioContainingNonReportableComponentIndicator <"Portfolio Containing Non-Reportable Component Indicator">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"117" field "Portfolio Containing Non Reportable Component Indicator"
        provision"If collateral is reported on a portfolio basis, indicator of whether the collateral portfolio includes swap transactions exempt from reporting."]
        return "Not Modelled"
            as "117 Portfolio Containing Non Reportable Component Indicator"

reporting rule InitialMarginPostedByTheReportingCounterpartyPostHaircut <"Initial Margin Posted By The Reporting Counterparty Post Haircut">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"118" field "Initial Margin Posted By The Reporting Counterparty Post Haircut"
        provision"Monetary value of initial margin that has been posted by the reporting counterparty, including any margin that is in transit and pending settlement unless inclusion of such margin is not allowed under the jurisdictional requirements. If the collateralisation is performed at portfolio level, the initial margin posted relates to the whole portfolio; if the collateralisation is performed for single transactions, the initial margin posted relates to such single transaction. This refers to the total current value of the initial margin after application of the haircut (if applicable), rather than to its daily change. The data element refers both to uncleared and centrally cleared transactions. For centrally cleared transactions, the data element does not include default fund contributions, nor collateral posted against liquidity provisions to the central counterparty, i.e., committed credit lines. If the initial margin posted is denominated in more than one currency, those amounts are converted into a single currency chosen by the reporting counterparty and reported as one total value."]
        return "Not Modelled"
            as "118 Initial Margin Posted By The Reporting Counterparty Post Haircut"

reporting rule InitialMarginPostedByTheReportingCounterpartyPreHaircut <"Initial Margin Posted By The Reporting Counterparty Pre Haircut">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"119" field "Initial Margin Posted By The Reporting Counterparty Pre Haircut"
        provision "Monetary value of initial margin that has been posted by the reporting counterparty, including any margin that is in transit and pending settlement unless inclusion of such margin is not allowed under the jurisdictional requirements. If the collateralisation is performed at portfolio level, the initial margin posted relates to the whole portfolio; if the collateralisation is performed for single transactions, the initial margin posted relates to such single transaction. This refers to the total current value of the initial margin, rather than to its daily change. The data element refers both to uncleared and centrally cleared transactions. For centrally cleared transactions, the data element does not include default fund contributions, nor collateral posted against liquidity provisions to the central counterparty, i.e., committed credit lines. If the initial margin posted is denominated in more than one currency, those amounts are converted into a single currency chosen by the reporting counterparty and reported as one total value."]
        return "Not Modelled"
            as "119 Initial Margin Posted By The Reporting Counterparty Pre Haircut"

reporting rule CurrencyOfInitialMarginPosted <"Currency Of Initial Margin Posted">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"120" field "Currency Of Initial Margin Posted"
        provision "Currency in which the initial margin posted is denominated. If the initial margin posted is denominated in more than one currency, this data element reflects one of those currencies into which the reporting counterparty has chosen to convert all the values of posted initial margins."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "120" field "Currency Of Initial Margin Posted" footnote "79"
        provision "For portfolio with multiple currencies, it must be converted in to a single currency chosen by the reporting counterparty and reported."]
        return "Not Modelled"
            as "120 Currency Of Initial Margin Posted"

reporting rule InitialMarginCollectedByTheReportingCounterpartyPostHaircut <"Initial Margin Collected By The Reporting Counterparty Post Haircut">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"121" field "Initial Margin Collected By The Reporting Counterparty Post Haircut"
        provision"Monetary value of initial margin that has been collected by the reporting counterparty, including any margin that is in transit and pending settlement unless inclusion of such margin is not allowed under the jurisdictional requirements. If the collateralisation is performed at portfolio level, the initial margin collected relates to the whole portfolio; if the collateralisation is performed for single transactions, the initial margin collected relates to such single transaction. This refers to the total current value of the initial margin after application of the haircut (if applicable), rather than to its daily change. The data element refers both to uncleared and centrally cleared transactions. For centrally cleared transactions, the data element does not include collateral collected by the central counterparty as part of its investment activity. If the initial margin collected is denominated in more than one currency, those amounts are converted into a single currency chosen by the reporting counterparty and reported as one total value."]
        return "Not Modelled"
            as "121 Initial Margin Collected By The Reporting Counterparty Post Haircut"

reporting rule InitialMarginCollectedByTheReportingCounterpartyPreHaircut <"Initial Margin Collected By The Reporting Counterparty Pre Haircut">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"122" field "Initial Margin Collected By The Reporting Counterparty Pre Haircut"
        provision "Monetary value of initial margin that has been collected by the reporting counterparty, including any margin that is in transit and pending settlement unless inclusion of such margin is not allowed under the jurisdictional requirements. If the collateralisation is performed at portfolio level, the initial margin collected relates to the whole portfolio; if the collateralisation is performed for single transactions, the initial margin collected relates to such single transaction. This refers to the total current value of the initial margin, rather than to its daily change. The data element refers both to uncleared and centrally cleared transactions. For centrally cleared transactions, the data element does not include collateral collected by the central counterparty as part of its investment activity. If the initial margin collected is denominated in more than one currency, those amounts are converted into a single currency chosen by the reporting counterparty and reported as one total value."]
        return "Not Modelled"
            as "122 Initial Margin Collected By The Reporting Counterparty Pre Haircut"

reporting rule CurrencyOfInitialMarginCollected <"Currency Of Initial Margin Collected">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"123" field "Currency Of Initial Margin Collected"
        provision"Currency in which the initial margin collected is denominated. If the initial margin collected is denominated in more than one currency, this data element reflects one of those currencies into which the reporting counterparty has chosen to convert all the values of collected initial margins."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "123" field "Currency Of Initial Margin Collected" footnote "80"
        provision "For portfolio with multiple currencies, it must be converted in to a single currency chosen by the reporting counterparty and reported."]
        return "Not Modelled"
            as "123 Currency Of Initial Margin Collected"

reporting rule VariationMarginCollateralPortfolioCode <"Variation Margin Collateral Portfolio Code">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"124" field "Variation Margin Collateral Portfolio Code"
        rationale "For CFTC, the Peer WG noted that fns #74/77 for #116 IMCode/124 VMCode Tech Specs state If collateralization was performed on a transaction level basis, TRANSACTIONLEVEL is accepted.  (Ticket 171)."
        rationale_author "Peer WG - 16/3/2022"
        provision"If collateral is reported on a portfolio basis, a unique code assigned by the reporting counterparty to the portfolio that tracks the aggregate variation margin related to a set of open swap transactions. This data element is not applicable if the collateralisation was performed on a transaction level basis, or if there is no collateral agreement, or if no collateral is posted or received. The portfolio code is required for both collateral reporting and valuation reporting in order to link the 2 data sets."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "124" field "Variation Margin Collateral Portfolio Code" footnote "81"
        provision "If collateralization was performed on a transaction level basis, 'TRANSACTION-LEVEL' is accepted."]
        return "Not Modelled"
            as "124 Variation Margin Collateral Portfolio Code"

reporting rule VariationMarginPostedByTheReportingCounterpartyPreHaircut <"Variation Margin Posted By The Reporting Counterparty Pre Haircut">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"125" field "Variation Margin Posted By The Reporting Counterparty Pre Haircut"
        provision "Monetary value of the variation margin posted by the reporting counterparty (including the cash-settled one), and including any margin that is in transit and pending settlement unless inclusion of such margin is not allowed under the jurisdictional requirements. Contingent variation margin is not included. If the collateralisation is performed at portfolio level, the variation margin posted relates to the whole portfolio; if the collateralisation is performed for single transactions, the variation margin posted relates to such single transaction. This data element refers to the total current value of the variation margin, cumulated since the first reporting of variation margins posted for the portfolio/transaction. If the variation margin posted is denominated in more than one currency, those amounts are converted into a single currency chosen by the reporting counterparty and reported as one total value."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "125" field "Variation Margin Posted By The Reporting Counterparty Pre Haircut" footnote "82"
        provision "This data element must be reported daily regardless of whether there is a change in the value since the last reporting."]
        return "Not Modelled"
            as "125 Variation Margin Posted By The Reporting Counterparty Pre Haircut"

reporting rule CurrencyOfVariationMarginPosted <"Currency Of Variation Margin Posted">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"126" field "Currency Of Variation Margin Posted"
        provision"Currency in which the variation margin posted is denominated. If the variation margin posted is denominated in more than one currency, this data element reflects one of those currencies into which the reporting counterparty has chosen to convert all the values of posted variation margins."]
        return "Not Modelled"
            as "126 Currency Of Variation Margin Posted"

reporting rule VariationMarginCollectedByTheReportingCounterpartyPreHaircut <"Variation Margin Collected By The Reporting Counterparty Pre Haircut">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"127" field "Variation Margin Collected By The Reporting Counterparty Pre Haircut"
        provision "Monetary value of the variation margin collected by the reporting counterparty (including the cash-settled one), and including any margin that is in transit and pending settlement unless inclusion of such margin is not allowed under the jurisdictional requirements. Contingent variation margin is not included. If the collateralisation is performed at portfolio level, the variation margin collected relates to the whole portfolio; if the collateralisation is performed for single transactions, the variation margin collected relates to such single transaction. This refers to the total current value of the variation margin, cumulated since the first reporting of collected variation margins for the portfolio/ transaction. If the variation margin collected is denominated in more than one currency, those amounts are converted into a single currency chosen by the reporting counterparty and reported as one total value."]
    [regulatoryReference CFTC Part45 appendix "1" dataElement "127" field "Variation Margin Collected By The Reporting Counterparty Pre Haircut" footnote "83"
        provision "This data element must be reported daily regardless of whether there is a change in the value since the last reporting."]
        return "Not Modelled"
            as "127 Variation Margin Collected By The Reporting Counterparty Pre Haircut"

reporting rule CurrencyOfVariationMarginCollected <"Currency Of Variation Margin Collected">
    [regulatoryReference CFTC Part45 appendix "1" dataElement"128" field "Currency Of Variation Margin Collected"
        provision"Currency in which the variation margin collected is denominated. If the variation margin collected is denominated in more than one currency, this data element reflects one of those currencies into which the reporting counterparty has chosen to convert all the values of collected variation margins."]
        return "Not Modelled"
            as "128 Currency Of Variation Margin Collected"