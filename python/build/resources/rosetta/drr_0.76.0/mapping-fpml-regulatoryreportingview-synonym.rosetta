namespace drr.mapping.fpml.regulatoryreportingview
version "0.76.0"

import cdm.mapping.fpml.processes.*
import drr.regulation.common.*
import cdm.event.workflow.*
import cdm.event.common.*
import cdm.product.template.*

import cdm.base.staticdata.party.*
import cdm.legalagreement.csa.*

synonym source FpML_5_10_RegulatoryReportingView extends FpML_5_10_Processes
{
    ReportableEvent:
        + reportableTrade
            [value "ignore"] 
        + reportableInformation
            [value "tradeHeader" path "trade"]
            // [value "reportingRegime" path "trade->tradeHeader->partyTradeInformation"]

    ReportableInformation:
        + largeSizeTrade
            [set to True when "partyTradeInformation->largeSizeTrade" = True]
            [set to False when "partyTradeInformation->largeSizeTrade" = False]
        + executionVenueType
            [set to ExecutionVenueTypeEnum->OffFacility when "partyTradeInformation->executionVenueType" = "OffFacility"]
            [set to ExecutionVenueTypeEnum->SEF when "partyTradeInformation->executionVenueType" = "SEF"]
        + partyInformation
            [value "partyTradeInformation"]
        + confirmationMethod
            [value "confirmationMethod" path "partyTradeInformation"]
        //+ intragroup
            // set based on nonpublicExecutionReport -> trade -> tradeHeader -> partyTradeInformation -> category <category categoryScheme="http://www.dtcc.com/intragroup">false</category>
        //ToDo: This is a WiP proposal. A custom mapper is needed to filter category fields by an specific attribute value (https://www.fpml.org/coding-scheme/category-anonymous-execution-1-0.xml).
        + sefOrDcmAnonymousIndicator
            [set to True when "partyTradeInformation->category" = "Anonymous"]
            [set to False when "partyTradeInformation->category" = "Disclosed"]

    // WorkflowStep:
    //     +timestamp
    //         [value "timestamps" path "trade->tradeHeader->partyTradeInformation"]

    EventTimestamp:
        + dateTime
            [value "confirmed" path "trade->tradeHeader->partyTradeInformation->timestamps"]
        + qualification
            [set to EventTimestampQualificationEnum -> confirmationDateTime when path = "trade->tradeHeader->partyTradeInformation->timestamps->confirmed"]

    Trade:
        - collateral
        + collateral
            [value "partyTradeInformation" path "tradeHeader"]
        - partyRole
        + partyRole
            [value "determiningParty" ,"barrierDeterminationAgent", "hedgingParty" , "brokerPartyReference" mapper "PartyRole"]
            [value "relatedParty" path "tradeHeader->partyTradeInformation" set when "tradeHeader->partyTradeInformation->relatedParty->role" = "ClearingOrganization"]
    
    Product:
        + contractualProduct
            [hint "tradeHeader"]

    EconomicTerms:
        + nonStandardisedTerms
            [set to True when "tradeHeader->partyTradeInformation->nonStandardTerms" = True]
            [set to False when "tradeHeader->partyTradeInformation->nonStandardTerms" = False]

	PartyRole:
		+ partyReference
			[value "partyReference" maps 2 meta "href"]
		+ role
			[value "role" maps 2]
		+ ownershipPartyReference
			[value "partyReference" maps 2 set when "role" exists meta "href"]

    Collateral:
        + portfolioIdentifier
            [hint "collateralPortfolio"]

//interfering with TradeID Mapping
    // Identifier:
    //     + assignedIdentifier
    //         [hint "collateralPortfolio"]

    // AssignedIdentifier:
    //     + identifier
    //         [value "collateralPortfolio"]

    ReportingRegime:
        + regimeName
            [value "name"]
        + supervisoryBody
            [value "supervisoryBody" path "supervisorRegistration"]
        + mandatorilyClearable
            [set to True when "mandatorilyClearable" = "true"]
            [set to False when "mandatorilyClearable" = "false"]
        + reportingRole
            [value "reportingRole"]
        //+ cftcPartyInformation
            // [set organizationType value based on corresponding value in Party block, must be associated with regimeInformation->supervisoryBody CFTC]
        + esmaPartyInformation
            [hint "entityClassification"]
    
    ESMAPartyInformation:
        + natureOfParty
            [value "entityClassification"/* meta "entityClassificationScheme"*/]
        + corporateSector
       

    PartyInformation:
        + partyReference
			[value "partyReference" maps 2 meta "href"]
		+ relatedParty  
			[value "relatedParty"]
        + relatedPerson
            [value "relatedPerson"]
        + regimeInformation
            [value "reportingRegime"]
    
    CFTCPartyInformation:
        //+ federalIndicator
        //TH WiP -> Unclear how other entityClassification FpML coding scheme must map financial/federal entity indicators
        + financialIndicator
            [set to True when "entityClassification"= "Financial"]
            [set to True when "partyEntityClassification->entityClassification"= "Financial"]
            [set to False when "partyEntityClassification->entityClassification"= "NonFinancial"]
            [set to False when "entityClassification"= "NonFinancial"]
            //[set to True when "entityClassification"= "Financial", set to False]
            //[set to True when "partyEntityClassification->entityClassification"= "Financial", set to False]
        // + clearingException
        // //+ postPriceIndicator

    ClearingException:
        + clearingException
            [value "endUserException"]
            //TH Review -> should we consider clearingException=false when endUserException does not exists in FpML input?
        + clearingExceptionReason
            [value "endUserExceptionReason"]
        //+ clearingExceptionDeclaration
        /*
        Not mapped values for clearing-exception-reason scheme are:
			- Agent-Affiliate : Used to indicate a clearing exception where a firm is hedging and using an agent to do doing the hedging on its behalf.
			- Treasury-Affiliate : In the US, see CFTC No Action Letter 13-22 No Action Relief from the Clearing Requirement for Swaps Entered into by Eligible Treasury Affiliates.
        Pending Reason enum mapping for:
            - SMBK <"Small bank exemption - 50.50(d)">
            - NOAL <"No-action letter">
        */

    EventInstruction:
        - eventDate
        + eventDate
            // [value "agreementDate" path "tradingEvent" maps 2]
            [value "executionDateTime" path "trade->tradeHeader->partyTradeInformation" maps 2 dateFormat "yyyy-MM-dd'T'HH:mm:ssz"]            [value "agreementDate" path "amendment" maps 2 dateFormat "yyyy-MM-ddz"]
            [value "agreementDate" path "amendment" maps 2]
            [value "agreementDate" path "termination" maps 2 dateFormat "yyyy-MM-ddz"]
            [value "agreementDate" path "termination" maps 2]
            [value "novationDate" path "novation" maps 2]

    enums

    RegimeNameEnum:
        + ASIC
            [value "ASIC"]
        + CA_Rule_91_507
            [value "CA.Rule.91-507"]
        + DoddFrankAct
            [value "DoddFrankAct"]
        + EMIR
            [value "EMIR"]
        + HKTR
            [value "HKTR"]
        + JFSA
            [value "JFSA"]
        + MAS
            [value "MAS"]           
        + MiFID
            [value "MiFID"]
        + MiFIDII
            [value "MiFIDII"]
        + MiFIR
            [value "MiFIR"]
        + ODRF
            [value "ODRF"]
        + RussianFederation
            [value "RussianFederation"]
        +SFTR
            [value "SFTR"]

    SupervisoryBodyEnum:
	    + ASIC
            [value "ASIC"]
	    + BankOfRussia
            [value "BankOfRussia"]
	    + CA_AB_ASC
            [value "CA.AB.ASC"]
	    + CA_BC_BCSC
            [value "CA.BC.BCSC"]
	    + CA_MB_MSC
            [value "CA.MB.MSC"]
	    + CA_NB_FCSC
            [value "CA.NB.FCSC"]
	    + CA_NL_DSS
            [value "CA.NL.DSS"]
	    + CA_NS_NSSC
            [value "CA.NS.NSSC"]
	    + CA_NT_NTSO
            [value "CA.NT.NTSO"]
	    + CA_NU_NSO
            [value "CA.NU.NSO"]
	    + CA_ON_OSC
            [value "CA.ON.OSC"]
	    + CA_PEI_OSS
            [value "CA.PEI.OSS"]
        + CA_QC_AMF
            [value "CA.QC.AMF"]
	    + CA_SK_FCAA
            [value "CA.SK.FCAA"]
	    + CA_YT_OSS
            [value "CA.YT.OSS"]
	    + CFTC
            [value "CFTC"]
	    + ESMA
            [value "ESMA"]
        +FCA    
            [value "FCA"]
	    + Fed
            [value "Fed"]
	    + HKMA
            [value "HKMA"]
	    + JFSA
            [value "JFSA"]
	    + MAS
            [value "MAS"]
	    + ODRF
            [value "ODRF"]
	    + SEC
            [value "SEC"]

    ClearingExceptionReasonEnum:
        + ENDU
            [value "End-User"]
        + AFFL
            [value "Inter-Affiliate"]
        + COOP
            [value "Cooperative"]
        + OTHR
            [value "Exception"]

    ConfirmationMethodEnum:
        + Electronic
            [value "Electronic"]
        + NonElectronic
            [value "NonElectronic"]
        + NotConfirmed
            [value "NotConfirmed"]

    ReportingRoleEnum:
        + Agent
            [value "Agent"]
	    + Counterparty
            [value "Counterparty"]
	    + FullyDelegated
            [value "FullyDelegated"]
	    + Independent
            [value "Independent"]
	    + PartiallyDelegated
            [value "PartiallyDelegated"]
	    + Principal
            [value "Principal"]
	    + ReportingParty
            [value "ReportingParty"]
    	+ VoluntaryParty
            [value "VoluntaryParty"]

    NatureOfPartyEnum:
	    + CentralCounterparty
            [value "CentralCounterparty"]
	    + Exempt
            [value "Exempt"]
	    + Financial
            [value "Financial"]
    	+ NonFinancial
            [value "NonFinancial"]
}