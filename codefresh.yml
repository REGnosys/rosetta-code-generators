version: "1.0"
steps:
  TagReleaseName:
    title: Setup RELEASE_NAME variable with tag
    image: alpine/git
    when:
      condition:
        all:
          releaseNameNotDefined: "${{TAG_REPO}} == true"
    commands:
      - cf_export RELEASE_NAME=${{TAG_NAME}}

  BranchReleaseName:
    title: Setup RELEASE_NAME variable with branch name
    image: alpine/git
    when:
      condition:
        all:
          releaseNameNotDefined: "${{TAG_REPO}} == false"
    commands:
      - cf_export RELEASE_NAME=${{GLOBAL_RELEASE_VERSION}}.${{CF_BRANCH_TAG_NORMALIZED}}

  Build:
    title: Maven build
    fail_fast: true
    image: regnosys-docker-registry.jfrog.io/regnosys/mvn-docker-build:java-11
    working_directory: ./
    commands:
      - rm -rf /codefresh/volume/.m2/com/regnosys
      - mvn -s /settings.xml versions:set -DnewVersion=${{RELEASE_NAME}}
      - mvn -s /settings.xml versions:update-property -Dproperty=regnosys.common.version -DnewVersion=[${{RELEASE_NAME}}] -DallowSnapshots=true -DallowDowngrade=true
      - mvn -U -s /settings.xml -Pregnosys clean deploy

  TagRepo:
    title: Tag git repo with release name
    image: alpine/git
    when:
      condition:
        all:
          buildPassed: steps.BuildRelease.result == 'success'
          isRelease: "${{TAG_REPO}}"
    commands:
      - echo This is a release build, tag repos with release name [${{RELEASE_NAME}}]
      - git fetch --prune https://${{REGNOSYS_OPS}}:${{REGNOSYS_OPS_PWD}}@github.com/REGnosys/${{CF_REPO_NAME}}.git "+refs/tags/*:refs/tags/*"
      - git tag ${{RELEASE_NAME}}
      - git push https://${{REGNOSYS_OPS}}:${{REGNOSYS_OPS_PWD}}@github.com/REGnosys/${{CF_REPO_NAME}}.git ${{RELEASE_NAME}}
